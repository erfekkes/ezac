<?php
// $Id$

/***
EZAC onderhoud ledenbestand v7.x-1.0

Functie: invoeren en wijzigen van leden informatie
verwijderen gebeurt door code Actief op onwaar te zetten
Export functie naar bestand formaat tbv financiÃ«le administratie (mime mail).
timestamp veld Mutatie wordt bij elke wijziging aangepast.

Multi-step form 
VOORNAAM [VOORVOEG] ACHTERNAAM als zoekveld met autocomplete functie (AJAX)
Ook zoekfunctie op ADRES bouwen
overige velden van het record worden ingevuld uit de database
Button voor ZOEK (naam / adres) en BIJWERKEN. UNDO ?
Checks op unieke sleutels

Aanmaken Id (volgnummer, autoincrement) en AFKORTING invoeren/checken
Ook toegangscode voor drupal website genereren (check op uniek mail adres)
Toegang tot website via Drupal API ook aanmaken / wijzigen
Slotcode aanmaken, code / password uit bestand inlezen. 
Bericht over aangemaakte en vervallen slotcodes via mail naar functionele mailbox sturen


FormAPI tips: zie http://drupal.org/node/144132
*/


/* TODO Implement the hook_theme registry. Combine all theme registry entries
   into one hook_theme function in each corresponding module file.
function ezaclide_theme() {
  return array(
  );
} */

/**
* Globals
*/
$result = array();
//$hits = integer;
//$stage = string;
$lidrec = array();
$lid_soort = array('AL','VL','DO','DB','CL','OL','BF'); // soorten lidmaatschap
//$WijzigingSoort = string;

define("WIJZIGING_SOORT_NIEUW", 'nieuw');
define('WIJZIGING_SOORT_WIJZIGING', 'wijziging');
define('WIJZIGING_SOORT_VERWIJDERING', 'verwijdering');

/**
* Implementation of hook_permission().
*/
function ezaclide_permission() {
  return array(
    'ezac_edit' => array(
      'title' => t('EZAC ledenbestand management'),
      'description' => t('Edit EZAC leden bestand.'),
    ),
  );
}

/**
* Implementation of hook_menu().
*/
function ezaclide_menu() {
$items = array();

	$items['ledenbestand'] = array(
	  'title' => 'EZAC ledenbestand',
	  'description'=> 'Onderhoud EZAC ledenlijst',
	  'page callback' => 'ezaclide_overzicht',
	  'page arguments' => '',
	  'access callback' => 'user_access',
          'access arguments' => array('ezac_edit'),
	  'type' => MENU_NORMAL_ITEM
	); 
      $items['ledenbestand/overzicht'] = array(
	  'title' => 'Overzicht',
	  'description'=> 'Overzicht EZAC ledenbestand',
	  'page callback' => 'ezaclide_overzicht',
	  'page arguments' => '',
	  'access callback' => 'user_access',
	  'access arguments' => array('ezac_edit'),
	  'type' => MENU_DEFAULT_LOCAL_TASK,
	  'weight' => -1
	);
      $items['ledenbestand/bestand'] = array(
	  'title' => 'Export',
	  'description'=> 'Export ledenlijst naar bestand',
	  'page callback' => 'ezaclide_bestand',
	  'page arguments' => '',
	  'access callback' => 'user_access',
	  'access arguments' => array('ezac_edit'),
 	  'type' => MENU_LOCAL_TASK,
	  'weight' => 0
	);
	$items['ledenbestand/bestand/produce'] = array(
	  'title' => 'Ledenbestand - export',
	  'description' => 'Export ledenlijst naar bestand',
	  'page callback' => 'ezaclide_bestand_produce',
	  'page arguments' => array(3), //filenaam
	  'access callback' => 'user_access',
	  'access arguments' => array('ezac_edit'),
 	  'type' => MENU_CALLBACK,
	  'weight' => 1
	);
	$items['ledenbestand/new'] = array(
	  'title' => 'Nieuw',
	  'page callback' => 'ezaclide_new',
	  'page arguments' => '',
	  'access callback' => 'user_access',
	  'access arguments' => array('ezac_edit'),
	  'type' => MENU_LOCAL_TASK,
	  'weight' => 0
	); 
	$items['ledenbestand/edit'] = array(
	  'title' => 'Wijzigen',
	  'page callback' => 'ezaclide_edit', //ezaclide_edit function may be skipped
	  'page arguments' => '',
	  'access callback' => 'user_access',
	  'access arguments' => array('ezac_edit'),
	  'type' => MENU_LOCAL_TASK,
	  'weight' => 2
	); 
	$items['ledenbestand/browse'] = array(
	  'title' => 'Ledenbestand - Overzicht',
	  'description' => 'Inzage in Leden bestand',
	  'page callback' => 'ezaclide_browse',
	  'page arguments' => array(2, 3), 
	  'access callback' => 'user_access',
	  'access arguments' => array('ezac_edit'),
 	  'type' => MENU_CALLBACK,
	  'weight' => 1
	);
	$items['ledenbestand/mutaties'] = array(
	  'title' => 'Ledenbestand - Mutaties',
	  'description' => 'Inzage in Leden bestand',
	  'page callback' => 'ezaclide_mutaties',
	  'page arguments' => '', //array(2, 3), 
	  'access callback' => 'user_access',
	  'access arguments' => array('ezac_edit'),
 	  'type' => MENU_CALLBACK,
	  'weight' => 1
	);
	
return $items;
}

/**
* Called when user goes to example.com/?q=ledenbestand/new
*/
function ezaclide_new() {
  //drupal_set_message(t('Invoeren van een nieuw lid'));
  $WijzigingSoort = WIJZIGING_SOORT_NIEUW;
// Return the HTML generated from the $form data structure.
return drupal_get_form('ezaclide_new_form'); 
}

/**
* Called when user goes to example.com/?q=ledenbestand/edit
*/
function ezaclide_edit() {
  //drupal_set_message(t('Wijzigen lidgegevens'));
  $WijzigingSoort = WIJZIGING_SOORT_WIJZIGING;
  //unset($form_state['values']); //reset the form state to start value - WERKT NIET
// Return the HTML generated from the $form data structure.
return drupal_get_form('ezaclide_form');
}

/**
* Defines the Leden new record form
**/
function ezaclide_new_form($form, &$form_state) {
  global $lidrec;
  $lidrec = '';
  // Populate default values
  //$lidrec['Code'] = 'VL'; 
  //$lidrec['Actief'] = 1; 
  //$lidrec['Lid_van'] = date("Y-m-d");
  //$lidrec['Ledenlijstje'] = 1;
  //$lidrec['Etiketje'] = 1;
  //$lidrec['Tienrittenkaart'] = 0;

  // Default values
  $lidrec['voornaam'] = '';
  $lidrec['voorvoeg'] = '';
  $lidrec['achternaam'] = '';
  $lidrec['voorletter'] = '';
  $lidrec['afkorting'] = '';
  $lidrec['adres'] = '';
  $lidrec['postcode'] = '';
  $lidrec['plaats'] = '';
  $lidrec['land'] = '';
  $lidrec['telefoon'] = '';
  $lidrec['mobiel'] = '';
  $lidrec['code'] = 'VL';
  $lidrec['geboorteda'] = '';
  $lidrec['opmerking'] = '';
  $lidrec['actief'] = 1;
  $lidrec['lid_van'] = date("Y-m-d");
  $lidrec['lid_eind'] = '';
  $lidrec['rtlicense'] = '';
  $lidrec['leerling'] = 0;
  $lidrec['instructie'] = 0;
  $lidrec['instructeu'] = '';
  $lidrec['e_mail'] = '';
  $lidrec['camping'] = '';
  $lidrec['tourcaravan'] = '';
  $lidrec['stacaravan'] = '';
  $lidrec['winterstallingcaravan'] = '';
  $lidrec['winterstallingkist'] = '';
  $lidrec['zomerstallingkist'] = '';
  $lidrec['babyvriend'] = '';
  $lidrec['ledenlijstje'] = 1;
  $lidrec['jeugdlid'] = 0;
  $lidrec['peonderhoud'] = 0;
  $lidrec['specafk'] = 0;
  $lidrec['seniorlid'] = 0;
  $lidrec['tienrittenkaart'] = 0;
  $lidrec['ledenlijstje'] = 1;
  $lidrec['etiketje'] = 1;
  $lidrec['user'] = '';
  $lidrec['slotcode'] = '';
  $lidrec['actief'] = 1; 
  $lidrec['kenezacvan'] = '';
  $lidrec['id'] = 0; // kan dit veilig?


  $stage = 'new'; // for validate routine
  $form['stage'] = array( //define stage selector
    '#type' => 'value',
    '#value' => $stage );
  ezaclide_form_edit($form, $form_state); //&$form_state toegevoegd //& verwijderd
  return $form;
} //ezaclide_new_form

function ezaclide_new_form_validate($form, &$form_state) {
// perform validate for edit of record

// Voorvoeg
// Achternaam
// Afkorting
$q  = 'SELECT id, afkorting FROM {ezac_Leden}';
$q .= ' WHERE afkorting = :afkorting';
//$q .= ' AND Id != "' .$form_state['values']['Id'] .'"';
$arg = array(':afkorting' => $form_state['values']['afkorting']);
$checkres = db_query($q, $arg)->rowCount();
if ($checkres > 0) {
  form_set_error('afkorting','Afkorting bestaat al [' .$checkres);
		}
  // Voornaam
  // Voorletter
  // Adres
  // Postcode
  // Plaats
  // Telefoon
  // Mobiel
  // Land
  // Code
  // Geboorteda
  $dat = $form_state['values']['geboortedatum'];
  if ($dat !== '') {
	  $lv = explode('-',$dat);
	  if (checkdate($lv[1],$lv[0],$lv[2]) == FALSE) {
		  form_set_error('geboortedatum','Geboortedatum is onjuist');
	  }
  }
  // Opmerking
  // Instructeu
  // Actief
  // Lid_van
  $dat = $form_state['values']['lidvan'];
  if ($dat !== '') {
	  $lv = explode('-',$dat);
	  if (checkdate($lv[1],$lv[0],$lv[2]) == FALSE) {
		  form_set_error('lidvan','Datum begin lidmaatschap is onjuist');
	  }
  }

  // Lid_eind
  $dat = $form_state['values']['lideind'];
  if ($dat !== '') {
	  $lv = explode('-',$dat);
	  if (checkdate($lv[1],$lv[0],$lv[2]) == FALSE) {
		  form_set_error('lideind','Datum einde lidmaatschap is onjuist');
	  }
  }
  // RT license
  // Instructie
  // E_mail
  // Camping
  // Tourcaravan
  // Stacaravan
  // Winterstalling_caravan
  // winterstalling kist
  // Zomerstalling kist
  // Babyvriend
  // Ledenlijst
  // Etiketje
  // SpecAfk
  // User
  $user = $form_state['values']['usercode'];
  if ($user != '') {
    $q  = 'SELECT id, user FROM {ezac_Leden}';
    $q .= ' WHERE user = :user';
  //$q .= ' AND Id != "' .$form_state['values']['Id'] .'"';
    $arg = array(':user' => $user); //$form_state['values']['Usercode']); // moet $user zijn? 

    $checkres = db_query($q, $arg)->rowCount();
    if ($checkres > 0) {
      form_set_error('usercode','User code bestaat al');
    }
  }
  // seniorlid
  // jeugdlid
  // PEonderhoud
  // Slotcode
  // Mutatie
  $slot = $form_state['values']['slotcode'];
  if ($slot != '') {
    $q  = 'SELECT Id, slotcode FROM {ezac_Leden}';
    $q .= ' WHERE slotcode = :slotcode';
    $arg = array(':slotcode' => $slot);
  //	$q .= ' AND Id != "' .$form_state['values']['Id'] .'"';
    $checkres = db_query($q, $arg)->rowCount();
    if ($checkres > 0) {
      form_set_error('slotcode','Slotcode bestaat al');
    }
  }
  // KenEZACvan

} //ezaclide_new_form_validate

function ezaclide_new_form_submit($form, &$form_state) {
  //global $lid_soort;
  global $user;
  $lid_soort = array('AL','VL','DO','DB','CL','OL','BF'); // AVL nog toevoegen
  $stage = $form_state['values']['stage'];
  //$WijzigingSoort = $form_state['values']['WijzigingSoort'];
  $WijzigingSoort = WIJZIGING_SOORT_NIEUW;
  //$GewijzigdDoor = $user->name;

  // insert new record

  // omzetten Code
  $code = $lid_soort[$form_state['values']['code']];
  // omzetten Geboorteda
  if ($form_state['values']['geboortedatum'] != '') {
	  $dat = explode('-',$form_state['values']['geboortedatum']);
	  $gebdat = sprintf('%s-%s-%s',$dat[2],$dat[1],$dat[0]);	
  }
  else $gebdat = '';
  // Omzetten Lid_van
  if ($form_state['values']['lidvan'] != '') {
	  $dat = explode('-',$form_state['values']['lidvan']);
	  $lidvan = sprintf('%s-%s-%s',$dat[2],$dat[1],$dat[0]);
  }
  else $lidvan = '';
  // Omzetten Lid_eind
  if ($form_state['values']['lideind'] != '') {
	  $dat = explode('-',$form_state['values']['lideind']);
	  $lideind = sprintf('%s-%s-%s',$dat[2],$dat[1],$dat[0]);
  }
  else $lideind = '';
  // build $update 

  /* Deze code is uitgeschakeld
  //insert user in drupal database for VL
  // move to VALIDATE !
  //$insert = TRUE;
  if ($form_state['values']['Code'] = 'VL') {
    $insert = ezaclide_add_drupal_user($form_state['values']['Usercode'],
				    $form_state['values']['Slotcode'], //Password nog invoegen
				    $form_state['values']['E-mail']);
  } // if
  if ($insert == FALSE) {
  drupal_set_message('Gebruiker bestaat al in Drupal');
  }
  else {
  
  eind uitgeschakelde code */
	  
  //update record
  $update  = "INSERT INTO {ezac_Leden} SET ";
  $update .= "id=DEFAULT, "; // .$form_state['values']['Id'] .', ";
  $update .= "voorvoeg='" .$form_state['values']['voorvoeg'] ."', ";
  $update .= "achternaam='" .$form_state['values']['achternaam'] ."', ";
  $update .= "afkorting='" .$form_state['values']['afkorting'] ."', ";
  $update .= "voornaam='" .$form_state['values']['voornaam'] ."', ";
  $update .= "voorletter='" .$form_state['values']['voorletter'] ."', ";
  $update .= "adres='" .$form_state['values']['adres'] ."', ";
  $update .= "postcode='" .$form_state['values']['postcode'] ."', ";
  $update .= "plaats='" .$form_state['values']['plaats'] ."', ";
  $update .= "telefoon='" .$form_state['values']['telefoon'] ."', ";
  $update .= "mobiel='" .$form_state['values']['mobiel'] ."', ";
  $update .= "land='" .$form_state['values']['land'] ."', ";
  $update .= "code='" .$code ."', "; // naar waarde omzetten
  if ($gebdat <> '') $update .= "geboorteda='" .$gebdat ."', "; 
  else $update .= "geboorteda=NULL, ";
  $update .= "opmerking='" .$form_state['values']['opmerking'] ."', ";
  $update .= "instructeu='" .$form_state['values']['instructeur'] ."', "; 
  $update .= "actief=" .$form_state['values']['actief'] .", ";
  if ($lideind <> '') $update .= "lid_eind='" .$lideind ."', ";	
  else $update .= "lid_eind=NULL, ";
  if ($lidvan <> '') $update .= "lid_van='" .$lidvan ."', "; 
  else $update .= "lid_van=NULL, ";
  $update .= "rtlicense=" .$form_state['values']['rt'] .", ";
  $update .= "instructie=" .$form_state['values']['instructie'] .", ";
  $update .= "e_mail='" .$form_state['values']['e-mail'] ."', ";
  $update .= "camping=" .$form_state['values']['camping'] .", ";
  $update .= "tourcaravan=" .$form_state['values']['tourcaravan'] .", ";
  $update .= "stacaravan=" .$form_state['values']['stacaravan'] .", ";
  $update .= "winterstallingcaravan=" .$form_state['values']['winterstallingcaravan'] .", ";
  $update .= "winterstallingkist=" .$form_state['values']['winterstallingkist'] .", ";
  $update .= "zomerstallingkist=" .$form_state['values']['zomerstallingkist'] .", ";
  $update .= "babyvriend=" .$form_state['values']['babyvriend'] .", ";
  $update .= "ledenlijstje=" .$form_state['values']['ledenlijst'] .", ";
  $update .= "etiketje=" .$form_state['values']['etiket'] .", ";
  $update .= "specafk=" .$form_state['values']['specafk'] .", ";
  $update .= "user='" .$form_state['values']['usercode'] ."', ";
  $update .= "seniorlid=" .$form_state['values']['seniorlid'] .", ";
  $update .= "jeugdlid=" .$form_state['values']['jeugdlid'] .", ";
  $update .= "peonderhoud=" .$form_state['values']['peonderhoud'] .", ";
  $update .= "slotcode='" .$form_state['values']['slotcode'] ."', ";
  $update .= "mutatie='" .date('Y-m-d H:i:s') ."', "; //jjjj-mm-dd en tijd maken
  $update .= "wijzigingSoort='" .$WijzigingSoort ."', ";
  $update .= "kenezacvan='" .$form_state['values']['kenezacvan'] ."'";
  //	$update .= 'WHERE Id='	.$form_state['values']['Id'] .' LIMIT 1'; // LIMIT 1
  //drupal_set_message('Query [' .$update .']'); //DEBUG
  
  
  //gebruik hier try ... catch met catch(Exception $e) en $error = $e->getMessage()
  
  try {
    $result = db_query ($update); // CHECK OP RESULTAAT
  }
  catch(Exception $e) {
    drupal_set_message('FOUT [' .$e->getMessage() .'] bij ['.$update .']');
  }
  drupal_set_message('Record is toegevoegd'); 
  // generate web user id or deactivate
  // send mail to slotcode update person
  //} //else $insert
  return; //path for redirection

} // ezaclide_new_form_submit

/**
* Defines the Ledenlijst Naam selection form.
*/
function ezaclide_form($form, &$form_state) { 
  
//  if ($form_state['values'] == NULL) {  // DIT WERKT NIET MEER - undefined index: values
  if (!isset($form_state['values'])) {  // Vervangen door ISSET functie
    // We're entering the form for the first time. Display the name selection dialogue
	$stage = 'name';	// initial value = 'name' : name selection
	$form['stage'] = array( //define stage selector
	  '#type' => 'value',
	  '#value' => $stage );
	} // if
	else {
	  $stage = $form_state['values']['stage'];
	  //drupal_set_message('Stage ' .$form_state['values']['stage']); //DEBUG
	}
	
  switch ($stage) {
    case "name": {
	  //drupal_set_message('Form stage "name"'); //DEBUG
	  ezaclide_form_name($form, $form_state); //& removed
	  $form_state['rebuild'] = TRUE; //Zolang REBUILD waar is wordt niet naar submit gegaan
	  break;
	} // case
    case "select":{
	  //drupal_set_message('Form stage "select"'); //DEBUG
	  ezaclide_form_select($form, $form_state); //& removed
	  $form_state['rebuild'] = TRUE; //Zolang REBUILD waar is wordt niet naar submit gegaan
	  break;	
	} // case
    case "edit": {
	  //drupal_set_message('Form stage "edit"'); //DEBUG
	  ezaclide_form_edit($form, $form_state); //& removed
	  $form_state['rebuild'] = FALSE; //Zolang REBUILD waar is wordt niet naar submit gegaan
	  break;	
	} // case
  } //switch
  //drupal_set_message('Form stage [' .$stage .'] performed'); //DEBUG

  return $form;
}

/**
* Build NAME form.
*/
function ezaclide_form_name(&$form = NULL, &$form_state) {

// een AHAH javascript zou leuk zijn om automatisch in te vullen...
  //drupal_set_message('ezaclide_form_name');
// build form for stage name selection
	$form['zoekvoornaam'] = array(
	'#title' => t('Voornaam'),
	'#type' => 'textfield',
	'#description' => t('Geef de gezochte voornaam'),
	);
	$form['zoekachternaam'] = array(
	'#title' => t('Achternaam'),
	'#type' => 'textfield',
	'#description' => t('Geef de gezochte achternaam'),
	);
	$form['submit'] = array(
	'#type' => 'submit',
	'#value' => t('Zoek')
	);
	
	return $form;
} //ezaclide_form_name

/**
* Build SELECT form.
*/
function ezaclide_form_select(&$form = NULL, &$form_state) {
global $hits;
global $result;
//global $records;

  $options = array();	
  while ($line = $result->fetchAssoc()) {
    $options[] = sprintf("%s %s %s",$line["voornaam"],$line["voorvoeg"],$line["achternaam"]);
    //$records[] = sprintf("%04s",$line["Id"]);
    $records[] = $line; // build table of records for edit
  } //while

  $form['naam'] = array(
  '#title' => t('Selecteer de juiste naam'),
  '#type' => 'radios',
  '#options' => $options
  );
  $form['submit'] = array(
  '#type' => 'submit',
  '#value' => t('Selecteer')
  );
  $form['stage'] = array( //define stage selector
  '#type' => 'value',
  '#value' => 'select'); //keep stage in select phase for validation
  $form['records'] = array( //store selection records
  '#type' => 'value',
  '#value' => $records
  );
  return $form;
} // ezaclide_form_select()

/**
* Build EDIT form.
*/
function ezaclide_form_edit(&$form = NULL, &$form_state) {
  // Define all database fields for table LEDEN in form
  global $lidrec;
  global $WijzigingSoort;
  $options_yn = array(t('Nee'),t('Ja'));
  //global $lid_soort;
  $lid_soort = array('AL','VL','DO','DB','CL','OL','BF');	 // AVL nog toevoegen?

  //Naam Type Omvang
  //VOORVOEG Tekst 11
  $form['voorvoeg'] = array(
  '#title' => t('Voorvoeg'),
  '#type' => 'textfield',
  '#description' => t('Voorvoegsel'),
  '#default_value' => $lidrec['voorvoeg'],
  '#maxlength' => 11,
  '#required' => FALSE,
  '#size' => 11,
  '#weight' => 1,);
  //ACHTERNAAM Tekst 35
  $form['achternaam'] = array(
  '#title' => t('Achternaam'),
  '#type' => 'textfield',
  '#description' => t('Achternaam'),
  '#default_value' => $lidrec['achternaam'],
  '#maxlength' => 35,
  '#required' => TRUE,
  '#size' => 35,
  '#weight' => 2,);
  //AFKORTING Tekst 9
  $form['afkorting'] = array(
  '#title' => t('Afkorting'),
  '#type' => 'textfield',
  '#description' => t('UNIEKE afkorting voor startadministratie'),
  '#default_value' => $lidrec['afkorting'],
  '#maxlength' => 9,
  '#required' => FALSE,
  '#size' => 9,
  '#weight' => 3,);
  //VOORNAAM Tekst 13
  $form['voornaam'] = array(
  '#title' => t('Voornaam'),
  '#type' => 'textfield',
  '#description' => t('Voornaam'),
  '#default_value' => $lidrec['voornaam'],
  '#maxlength' => 13,
  '#required' => TRUE,
  '#size' => 13,
  '#weight' => 4,);
  //VOORLETTER Tekst 21
  $form['voorletter'] = array(
  '#title' => t('Voorletters'),
  '#type' => 'textfield',
  '#description' => t('Voorletters'),
  '#default_value' => $lidrec['voorletter'],
  '#maxlength' => 21,
  '#required' => TRUE,
  '#size' => 21,
  '#weight' => 5,);
  //ADRES Tekst 26
  $form['adres'] = array(
  '#title' => t('Adres'),
  '#type' => 'textfield',
  '#description' => t('Adres'),
  '#default_value' => $lidrec['adres'],
  '#maxlength' => 26,
  '#required' => TRUE,
  '#size' => 26,
  '#weight' => 6,);
  //POSTCODE Tekst 9
  $form['postcode'] = array(
  '#title' => t('Postcode'),
  '#type' => 'textfield',
  '#description' => t('Postcode'),
  '#default_value' => $lidrec['postcode'],
  '#maxlength' => 9,
  '#required' => TRUE,
  '#size' => 9,
  '#weight' => 7,);
  //PLAATS Tekst 24
  $form['plaats'] = array(
  '#title' => t('Plaats'),
  '#type' => 'textfield',
  '#description' => t('Plaats'),
  '#default_value' => $lidrec['plaats'],
  '#maxlength' => 24,
  '#required' => TRUE,
  '#size' => 24,
  '#weight' => 8,);
  //TELEFOON Tekst 14
  $form['telefoon'] = array(
  '#title' => t('Telefoon'),
  '#type' => 'textfield',
  '#description' => t('Telefoon'),
  '#default_value' => $lidrec['telefoon'],
  '#maxlength' => 14,
  '#required' => FALSE,
  '#size' => 14,
  '#weight' => 9,);
  //Mobiel Tekst 50
  $form['mobiel'] = array(
  '#title' => t('Mobiel'),
  '#type' => 'textfield',
  '#description' => t('Mobiel nummer'),
  '#default_value' => $lidrec['mobiel'],
  '#maxlength' => 50,
  '#required' => false,
  '#size' => 50,
  '#weight' => 10,);
  //LAND Tekst 10
  $form['land'] = array(
  '#title' => t('Land'),
  '#type' => 'textfield',
  '#description' => t('Land'),
  '#default_value' => $lidrec['land'],
  '#maxlength' => 10,
  '#required' => FALSE,
  '#size' => 10,
  '#weight' => 11,);
  //CODE Tekst 5
  $default_soort = array_search($lidrec['code'], $lid_soort);
  $form['code'] = array(
  '#title' => t('Code'),
  '#type' => 'select',
  '#default_value' => $default_soort,
  '#description' => t('Soort lidmaatschap (code)'),
  '#options' => $lid_soort,
  '#weight' => 12
  );
  $form['tienrittenkaart'] = array(
  '#title' => t('Tienrittenkaart'),
  '#type' => 'select',
  '#options' => $options_yn,
  '#description' => t('Tienrittenkaarthouder?'),
  '#default_value' => $lidrec['tienrittenkaart'],
  '#maxlength' => 1,
  '#required' => TRUE,
  '#size' => 1,
  '#weight' => 12);
  //GEBOORTEDA Datum/tijd 8
  $gd = $lidrec['geboorteda'];
  if ($gd != NULL) {
	  $lv = explode('-',$gd);
	  $gebdat = sprintf('%s-%s-%s',$lv[2],$lv[1],$lv[0]);
  }
  else $gebdat = '';
  $form['geboortedatum'] = array(
  '#title' => t('Geboortedatum'),
  '#type' => 'textfield',
  '#description' => t('Geboortedatum [dd-mm-jjjj]'),
  '#default_value' => $gebdat,
  '#maxlength' => 10,
  '#required' => FALSE,
  '#size' => 10,
  '#weight' => 13
  );
  //OPMERKING Tekst 27
  $form['opmerking'] = array(
  '#title' => t('Opmerking'),
  '#type' => 'textfield',
  '#description' => t('Opmerking'),
  '#default_value' => $lidrec['opmerking'],
  '#maxlength' => 27,
  '#required' => FALSE,
  '#size' => 27,
  '#weight' => 14);
  //INSTRUCTEU Tekst 9
  //Actief Ja/nee 1
  $form['actief'] = array(
  '#title' => t('Actief'),
  '#type' => 'select',
  '#options' => $options_yn,
  '#description' => t('Nog actief lid?'),
  '#default_value' => $lidrec['actief'],
  '#maxlength' => 1,
  '#required' => TRUE,
  '#size' => 1,
  '#weight' => 15);
  //LID_VAN Datum/tijd 8
  $ls = $lidrec['lid_van'];
  if ($ls != NULL) {
	  $lv = explode('-',$ls);
	  $lid_van = sprintf('%s-%s-%s',$lv[2],$lv[1],$lv[0]);
  }
  else $lid_van = '';
  $lv = explode('-',$lidrec['lid_van']);
  $lid_vanaf = sprintf('%s-%s-%s',$lv[2],$lv[1],$lv[0]);
  $form['lidvan'] = array(
  '#title' => t('Lid vanaf'),
  '#type' => 'textfield', //DATE
  '#description' => t('Ingangsdatum lidmaatschap [dd-mm-jjjj]'),
  '#default_value' => $lid_van,
  '#maxlength' => 10,
  '#required' => FALSE,
  '#size' => 10,
  '#weight' => 16);
  //LID_EIND Datum/tijd 8
  $le = $lidrec['lid_eind'];
  if ($le != NULL) {
	  $lv = explode('-',$le);
	  $lid_eind = sprintf('%s-%s-%s',$lv[2],$lv[1],$lv[0]);
  }
  else $lid_eind = '';
  $form['lideind'] = array(
  '#title' => t('Lid einde'),
  '#type' => 'textfield', //DATE
  '#description' => t('Datum einde lidmaatschap [dd-mm-jjjj]'),
  '#default_value' => $lid_eind,
  '#maxlength' => 10,
  '#required' => FALSE,
  '#size' => 10,
  '#weight' => 17);

  //RT license Ja/nee 1
  $form['rt'] = array(
  '#title' => t('RT'),
  '#type' => 'select',
  '#default_value' => $lidrec['rtlicense'],
  '#description' => t('RT aantekening (Ja/nee)'),
  '#options' => $options_yn,
  '#weight' => 18
  );

  //leerling Ja/nee 0
  $form['leerling'] = array(
  '#title' => t('Leerling'),
  '#type' => 'select',
  '#default_value' => $lidrec['leerling'],
  '#description' => t('Leerling (Ja/nee)'),
  '#options' => $options_yn,
  '#weight' => 18
  );
  //Instructie Ja/nee 1
  $form['instructie'] = array(
  '#title' => t('Instructie'),
  '#type' => 'select',
  '#default_value' => $lidrec['instructie'],
  '#description' => t('Instructeur (Ja/nee)'),
  '#options' => $options_yn,
  '#weight' => 19
  );
  //Instructeu Tekst 9
  //@TODO remove this field, deprecated with LVS
  $form['instructeur'] = array(
  '#title' => t('Instructeur'),
  '#type' => 'textfield',
  '#description' => t('Instructie bevoegdheid'),
  '#default_value' => $lidrec['instructeu'],
  '#maxlength' => 9,
  '#required' => FALSE,
  '#size' => 9,
  '#weight' => 19);

  //E_mail Tekst 50
  $form['e-mail'] = array(
  '#title' => t('E-mail'),
  '#type' => 'textfield',
  '#description' => t('E-mail adres'),
  '#default_value' => $lidrec['e_mail'],
  '#maxlength' => 50,
  '#required' => FALSE,
  '#size' => 50,
  '#weight' => 20);

  //Camping Ja/nee 1
  $form['camping'] = array(
  '#title' => t('Camping'),
  '#type' => 'select',
  '#default_value' => $lidrec['camping'],
  '#description' => t('Camping (Ja/nee)'),
  '#options' => $options_yn,
  '#weight' => 21
  );

  //Tourcaravan Ja/nee 1
  $form['tourcaravan'] = array(
  '#title' => t('Tourcaravan'),
  '#type' => 'select',
  '#default_value' => $lidrec['tourcaravan'],
  '#description' => t('Toercaravan (Ja/nee)'),
  '#options' => $options_yn,
  '#weight' => 22
  );
  //Stacaravan Ja/nee 1
  $form['stacaravan'] = array(
  '#title' => t('Stacaravan'),
  '#type' => 'select',
  '#default_value' => $lidrec['stacaravan'],
  '#description' => t('Stacaravan (Ja/nee)'),
  '#options' => $options_yn,
  '#weight' => 23
  );
  //WinterstallingCaravan Ja/nee 1
  $form['winterstallingcaravan'] = array(
  '#title' => t('Winterstalling caravan'),
  '#type' => 'select',
  '#default_value' => $lidrec['winterstallingcaravan'],
  '#description' => t('Winterstalling Caravan (Ja/nee)'),
  '#options' => $options_yn,
  '#weight' => 24
  );
  //WinterstallingKist Ja/nee 1
  $form['winterstallingkist'] = array(
  '#title' => t('Winterstalling kist'),
  '#type' => 'select',
  '#default_value' => $lidrec['winterstallingkist'],
  '#description' => t('Winterstalling Kist(Ja/nee)'),
  '#options' => $options_yn,
  '#weight' => 25
  );
  //ZomerstallingKist Ja/nee 1
  $form['zomerstallingkist'] = array(
  '#title' => t('Zomerstalling kist'),
  '#type' => 'select',
  '#default_value' => $lidrec['zomerstallingkist'],
  '#description' => t('Zomerstalling Kist(Ja/nee)'),
  '#options' => $options_yn,
  '#weight' => 26
  );
  //Babyvriend Ja/nee 1
  $form['babyvriend'] = array(
  '#title' => t('Babyvriend'),
  '#type' => 'select',
  '#default_value' => $lidrec['babyvriend'],
  '#description' => t('Vriend van Nico Baby(Ja/nee)'),
  '#options' => $options_yn,
  '#weight' => 27
  );
  //Ledenlijstje Ja/nee 1
  $form['ledenlijst'] = array(
  '#title' => t('Ledenlijst'),
  '#type' => 'select',
  '#default_value' => $lidrec['ledenlijstje'],
  '#description' => t('Vermelding op ledenlijst (Ja/nee)'),
  '#options' => $options_yn,
  '#weight' => 28
  );

  //Etiketje Ja/nee 1
  $form['etiket'] = array(
  '#title' => t('Etiket'),
  '#type' => 'select',
  '#default_value' => $lidrec['etiketje'],
  '#description' => t('Etiket afdrukken (Ja/nee)'),
  '#options' => $options_yn,
  '#weight' => 29
  );

  //SpecAfk Ja/nee 1
  $form['specafk'] = array(
  '#title' => t('Speciale afkorting'),
  '#type' => 'select',
  '#default_value' => $lidrec['specafk'],
  '#description' => t('Speciale afkorting (Ja/nee)'),
  '#options' => $options_yn,
  '#weight' => 30
  );
  //User Tekst 50
  $form['usercode'] = array(
  '#title' => t('UserCode website'),
  '#type' => 'textfield',
  '#description' => t('Usercode website (VVAAAA)'),
  '#default_value' => $lidrec['user'],
  '#maxlength' => 6,
  '#required' => FALSE,
  '#size' => 6,
  '#weight' => 31
  );

  //seniorlid Ja/nee 1
  $form['seniorlid'] = array(
  '#title' => t('Senior lid'),
  '#type' => 'select',
  '#default_value' => $lidrec['seniorlid'],
  '#description' => t('Senior lid status (Ja/nee)'),
  '#options' => $options_yn,
  '#weight' => 32
  );

  //jeugdlid Ja/nee 1
  $form['jeugdlid'] = array(
  '#title' => t('Jeugd / inwonend lid'),
  '#type' => 'select',
  '#default_value' => $lidrec['jeugdlid'],
  '#description' => t('Jeugd- of inwonend lid (Ja/nee)'),
  '#options' => $options_yn,
  '#weight' => 33
  );

  //PEonderhoud Ja/nee 1
  $form['peonderhoud'] = array(
  '#title' => t('Prive Eigenaar onderhoud (CAMO)'),
  '#type' => 'select',
  '#default_value' => $lidrec['peonderhoud'],
  '#description' => t('Prive Eigenaar onderhoud (Ja/nee)'),
  '#options' => $options_yn,
  '#weight' => 34
  );

  //Slotcode varchar(8)
  $form['slotcode'] = array(
  '#title' => t('Slotcode'),
  '#type' => 'textfield',
  '#description' => t('Slotcode (nnnnnn)'),
  '#default_value' => $lidrec['slotcode'],
  '#maxlength' => 8,
  '#required' => FALSE,
  '#size' => 8,
  '#weight' => 35
  );

  //Mutatie timestamp
  //maak tekstlabel met datum laatste wijziging (wordt automatisch bijgewerkt)

  //Id
  //Toon het het Id nummer van het record
  $form['id'] = array(
  '#type' => 'hidden',
  '#title' => t('Record nummer (Id)'),
  '#maxlength' => 8,
  '#size' => 8,
  '#value' => $lidrec['id'],
  '#weight' => 36
  );

  //WijzigingSoort
  //Toon de soort mutatie NIEUW WIJZIGING VERVALLEN
  $form['wijzigingsoort'] = array(
  '#type' => 'hidden',
  '#title' => t('Soort wijziging'),
  '#maxlength' => 15,
  '#size' => 15,
  '#value' => $WijzigingSoort,
  '#weight' => 37
  );

  //KenEZACvan
  //Hoe is EZAC ontdekt 
  $form['kenezacvan'] = array(
  '#type' => 'textfield',
  '#title' => t('Ken EZAC van'),
  '#default_value' => $lidrec['kenezacvan'],
  '#maxlength' => 20,
  '#size' => 20,
  '#weight' => 38
  );

  $form['submit'] = array(
  '#type' => 'submit',
  '#value' => t('Invoeren'),
  '#weight' => 39);

  $form['stage'] = array( //define stage selector
  '#type' => 'value',
  '#value' => 'edit'); //keep stage in edit phase for validation

} // ezaclide_form_edit()

/**
* Validate the form.
*/
function ezaclide_form_validate($form, &$form_state) {
  $stage = $form_state['values']['stage'];
  //drupal_set_message('validate stage [' .$stage .']'); //DEBUG

  global $hits;	// Waarvoor zijn deze globals nodig?
  global $result;
  global $lidrec;

  switch ($stage) {
    case "name": {
      // perform validate for name entry
      $Voornaam = $form_state['values']['zoekvoornaam'];
      $Achternaam = $form_state['values']['zoekachternaam'];

      //Geen * maar % als wildcard gebruiken
      if ($Achternaam == '*') {
	  // We notify the form API that this field has failed validation.
	  form_set_error(t('zoekachternaam','Gebruik % in plaats van *'));
	  }
      
      //Niet zoeken zonder argumenten
      if ($Voornaam .$Achternaam == "") {
	  // We notify the form API that this field has failed validation.
	  form_set_error(t('zoekvoornaam','Je moet wel een naam invullen...'));
	  }
      
      $hits = ezaclide_search_name($Voornaam, $Achternaam, $result);
      //drupal_set_message('Number of hits [' .$hits .']'); //DEBUG
      
      // zet $result in form_state
      //$form_state['values']['result'] = $result;
      //$form_state['values']['hits'] = $hits;
      
      switch ($hits) {
	case 0: {
	  $stage = 'name';
	  drupal_set_message('Naam [' .$Voornaam .' ' .$Achternaam .'] is niet gevonden');
	  break;
	} //case
	case 1: {
	  $stage = 'edit';
	  $lidrec = $result->fetchAssoc();
	  break;
	} //case
	default: {
	  $stage = 'select';
	}
      } //switch ($hits)
      $form_state['rebuild'] = TRUE; //Zolang REBUILD waar is wordt niet naar submit gegaan
      break;
  } //case name
    case "select": {
      //drupal_set_message('validate case select'); //DEBUG
      // perform validate for selection of one name
      // zoek op basis van geselecteerde naam het te wijzigen record
      // dat gaat het beste met het unieke id
      // zet dat record in $lidrec
      $keuze = $form_state["values"]["naam"];
      $records = $form_state["values"]["records"];
      $lidrec = $records[$keuze];

      $stage = 'edit'; // go edit the record
      $form_state['rebuild'] = TRUE; //Zolang REBUILD waar is wordt niet naar submit gegaan
      break;
    } //case select
    case "edit": {
      //drupal_set_message('validate case edit'); //DEBUG
      // perform validate for edit of record
      
      // Voorvoeg
      // Achternaam
      // Afkorting
      $q  = 'SELECT id, afkorting FROM {ezac_Leden}';
      $q .= ' WHERE afkorting = :Afkorting'; // .$form_state['values']['Afkorting'] .'"';
      $q .= ' AND id != :Id'; //"' .$form_state['values']['Id'] .'"';
      unset($args);
      $args[':Afkorting'] = $form_state['values']['afkorting'];
      $args[':Id'] = $form_state['values']['id'];
      $checkres = db_query($q, $args);
      if ($checkres->rowCount() > 0) {
	      form_set_error('afkorting','Afkorting bestaat al');
      }
      // Voornaam
      // Voorletter
      // Adres
      // Postcode
      // Plaats
      // Telefoon
      // Mobiel
      // Land
      // Code
      // Geboorteda
      $dat = $form_state['values']['geboortedatum'];
      if ($dat !== '') {
	  $lv = explode('-',$dat);
	  if (checkdate($lv[1],$lv[0],$lv[2]) == FALSE) {
	      form_set_error('geboortedatum','Geboortedatum is onjuist');
	  }
      }
      // Opmerking
      // Instructeu
      // Actief
      // Lid_van
      $dat = $form_state['values']['lidvan'];
      if ($dat !== '') {
	  $lv = explode('-',$dat);
	  if (checkdate($lv[1],$lv[0],$lv[2]) == FALSE) {
	      form_set_error('lidvan','Datum begin lidmaatschap is onjuist');
	  }
      }

      // Lid_eind
      $dat = $form_state['values']['lideind'];
      if ($dat !== '') {
	$lv = explode('-',$dat);
	if (checkdate($lv[1],$lv[0],$lv[2]) == FALSE) {
		form_set_error('lideind','Datum einde lidmaatschap is onjuist');
	}
      }
      // RT license
      // Instructie
      // E_mail
      // Camping
      // Tourcaravan
      // Stacaravan
      // Winterstalling_caravan
      // winterstalling kist
      // Zomerstalling kist
      // Babyvriend
      // Ledenlijst
      // Etiketje
      // SpecAfk
      // User
      $user = $form_state['values']['usercode'];
      if ($user != '') {
	$q  = 'SELECT id, user FROM {ezac_Leden}';
	$q .= ' WHERE user = :User'; //"' .$user .'"';
	$q .= ' AND id != :Id'; //"' .$form_state['values']['Id'] .'"';
	unset($args);
	$args[':User'] = $user;
	$args[':Id'] = $form_state['values']['id'];
	$checkres = db_query($q, $args);
	if ($checkres->rowCount() > 0) {
		form_set_error('usercode','User code bestaat al');
	}
      }
      // seniorlid
      // jeugdlid
      // PE onderhoud
      // Slotcode
      // Mutatie
      $slot = $form_state['values']['slotcode'];
      if ($slot != '') {
	$q  = 'SELECT id, slotcode FROM {ezac_Leden}';
	$q .= ' WHERE slotcode = :Slotcode'; //"' .$slot .'"';
	$q .= ' AND id != :Id'; //"' .$form_state['values']['Id'] .'"';
	unset($args);
	$args[':Slotcode'] = $slot;
	$args[':Id'] = $form_state['values']['id'];
	$checkres = db_query($q, $args);
	if ($checkres->rowCount() > 0) {
		form_set_error('slotcode','Slotcode bestaat al');
	}
      }
      // KenEZACvan
      
		      
      break;	
    } //case edit
    default: {
      drupal_set_message('Validate DEFAULT (error) [' .$stage .']');
    } //default
    } //switch $stage
	
    //drupal_set_message('Validate - set stage to [' .$stage .']'); //DEBUG
    $form_state['values']['stage'] = $stage; // update stage counter for next processing

    return;
} //ezaclide_form_validate

/**
* Search Leden table for Voornaam / Achternaam, return number of hits
*/
function ezaclide_search_name($Voornaam, $Achternaam, &$result) {
  // query database
  // Verwijder voorvoegsels
  if (strrchr($Achternaam, " ")) $Achternaam = trim(strrchr ($Achternaam, " "));
  unset($tokens);  
  $query  = 'SELECT * ';
  $query .= 'FROM {ezac_Leden} WHERE ';
  if ($Voornaam <> "") {
	  $query .= 'voornaam LIKE :Voornaam '; //"%' .$Voornaam .'%" ';
	  $tokens[':Voornaam'] = '%' .$Voornaam .'%'; } 
  if ($Voornaam <> "" and $Achternaam <> "")
	  $query .= 'AND ';
  if ($Achternaam <> "") {
	  $query .= 'achternaam LIKE :Achternaam'; //"%' .$Achternaam .'%"';
	  $tokens[':Achternaam'] = '%' .$Achternaam .'%';}
  //$query .= ' AND Actief';
  $query .= ' ORDER by achternaam, postcode, code';
  
  $result = db_query($query, $tokens);
  
  // establish number of hits with query in return
  return $result->rowCount(); //db_affected_rows();
}

/**
* Handle post-validation form submission.
*/
function ezaclide_form_submit($form, &$form_state) {
  //global $lid_soort;
  global $user;
  $lid_soort = array('AL','VL','DO','DB','CL','OL','BF'); // AVL nog toevoegen
  $stage = $form_state['values']['stage'];
  //	$WijzigingSoort = $form_state['values']['WijzigingSoort'];
  $WijzigingSoort = WIJZIGING_SOORT_WIJZIGING;
  //$GewijzigdDoor = $user->name;

  // update record or insert new record

  // omzetten Code
  $code = $lid_soort[$form_state['values']['code']];
  // omzetten Geboorteda
  if ($form_state['values']['geboortedatum'] != '') {
	  $dat = explode('-',$form_state['values']['geboortedatum']);
	  $gebdat = sprintf('%s-%s-%s',$dat[2],$dat[1],$dat[0]);	
  }
  else $gebdat = '';
  // Omzetten Lid_van
  if ($form_state['values']['lidvan'] != '') {
	  $dat = explode('-',$form_state['values']['lidvan']);
	  $lidvan = sprintf('%s-%s-%s',$dat[2],$dat[1],$dat[0]);
  }
  else $lidvan = '';
  // Omzetten Lid_eind
  if ($form_state['values']['lideind'] != '') {
	  $dat = explode('-',$form_state['values']['lideind']);
	  $lideind = sprintf('%s-%s-%s',$dat[2],$dat[1],$dat[0]);
  }
  else $lideind = '';
  // build $update 

  //update record
  $update  = "UPDATE {ezac_Leden} SET ";
  $update .= "id=" .$form_state["values"]["id"] .", ";
  $update .= "voorvoeg='" .$form_state["values"]["voorvoeg"] ."', ";
  $update .= "achternaam='" .$form_state["values"]["achternaam"] ."', ";
  $update .= "afkorting='" .$form_state["values"]["afkorting"] ."', ";
  $update .= "voornaam='" .$form_state["values"]["voornaam"] ."', ";
  $update .= "voorletter='" .$form_state["values"]["voorletter"] ."', ";
  $update .= "adres='" .$form_state["values"]["adres"] ."', ";
  $update .= "postcode='" .$form_state["values"]["postcode"] ."', ";
  $update .= "plaats='" .$form_state["values"]["plaats"] ."', ";
  $update .= "telefoon='" .$form_state["values"]["telefoon"] ."', ";
  $update .= "mobiel='" .$form_state["values"]["mobiel"] ."', ";
  $update .= "land='" .$form_state["values"]["land"] ."', ";
  $update .= "code='" .$code ."', "; // naar waarde omzetten
  if ($gebdat <> "") $update .= "geboorteda='" .$gebdat ."', "; 
  else $update .= "geboorteda=null, ";
  $update .= "tienrittenkaart='" .$form_state["values"]["tienrittenkaart"] ."', ";
  $update .= "opmerking='" .$form_state["values"]["opmerking"] ."', ";
  $update .= "instructeu='" .$form_state["values"]["instructeur"] ."', "; 
  $update .= "actief=" .$form_state["values"]["actief"] .", ";
  if ($lideind <> "") $update .= "lid_eind='" .$lideind ."', ";	
  else $update .= "lid_eind=null, ";
  if ($lidvan <> "") $update .= "lid_van='" .$lidvan ."', "; 
  else $update .= "lid_van=null, ";
  $update .= "rtlicense=" .$form_state["values"]["rt"] .", ";
  $update .= "leerling=" .$form_state["values"]["leerling"] .", ";
  $update .= "instructie=" .$form_state["values"]["instructie"] .", ";
  $update .= "e_mail='" .$form_state["values"]["e-mail"] ."', ";
  $update .= "camping=" .$form_state["values"]["camping"] .", ";
  $update .= "tourcaravan=" .$form_state["values"]["tourcaravan"] .", ";
  $update .= "stacaravan=" .$form_state["values"]["stacaravan"] .", ";
  $update .= "winterstallingcaravan=" .$form_state["values"]["winterstallingcaravan"] .", ";
  $update .= "winterstallingkist=" .$form_state["values"]["winterstallingkist"] .", ";
  $update .= "zomerstallingkist=" .$form_state["values"]["zomerstallingkist"] .", ";
  $update .= "babyvriend=" .$form_state["values"]["babyvriend"] .", ";
  $update .= "ledenlijstje=" .$form_state["values"]["ledenlijst"] .", ";
  $update .= "etiketje=" .$form_state["values"]["etiket"] .", ";
  $update .= "specafk=" .$form_state["values"]["specafk"] .", ";
  $update .= "user='" .$form_state["values"]["usercode"] ."', ";
  $update .= "seniorlid=" .$form_state["values"]["seniorlid"] .", ";
  $update .= "jeugdlid=" .$form_state["values"]["jeugdlid"] .", ";
  $update .= "peonderhoud=" .$form_state["values"]["peonderhoud"] .", ";
  $update .= "slotcode='" .$form_state["values"]["slotcode"] ."', ";
  $update .= "mutatie='" .date('y-m-d h:i:s') ."', "; //jjjj-mm-dd en tijd maken
  $update .= "wijzigingsoort='" .$wijzigingsoort ."', ";
  $update .= "kenezacvan='" .$form_state["values"]["kenezacvan"] ."' ";
  $update .= "where id="	.$form_state["values"]["id"] ." limit 1"; // limit 1
  try {
    $result = db_query ($update); // CHECK OP RESULTAAT
  } //try
  catch(Exception $e) {
    drupal_set_message('FOUT [' .$e->getMessage() .'] bij ['.$update .']');
  } // catch
//  if (db_error()) drupal_set_message('FOUT [' .db_error() .'] bij ['.$update .']');
  drupal_set_message('Record is bijgewerkt'); 
  // generate web user id or deactivate
  // send mail to slotcode update person

  return; //path for redirection
} // SUBMIT

/**
* overview of the ezac ledenbestand
*/
function ezaclide_overzicht() {
  // tekst die aan de gebruiker wordt getoond voor de export functie
  //  $output = '<h1>Status van het Ledenbestand</h1><p>';
  unset($output); //clear
  $output[0]['#type'] = 'markup';
  $output[0]['#markup'] = '<p><h1>Status van het Ledenbestand</h1></p>';
  $output[0]['#weight'] = 0;
  
  // toon aantal actieve en niet actieve records (per soort)
  $query = "SELECT COUNT(*) FROM {ezac_Leden}";
  $Aantal = db_query($query)->fetchField();
  
  $output[1]['#type'] = 'markup';
  $output[1]['#markup'] = t('Totaal aantal records: ') .$Aantal .'<br>';

  $query = "SELECT COUNT(*) FROM {ezac_Leden} WHERE Actief";
  $Actief = db_query($query)->fetchField();
  $output[2]['#type'] = 'markup';
  $output[2]['#markup'] = t('Aantal actieve records: ') .$Actief .'<p>';

  // Toon detail aantallen in tabel voor ACTIEF en NIET ACTIEF
  // Table tag attributes
  $attributes = array(
    'border'      => 1,
    'cellspacing' => 0,
    'cellpadding' => 5,
    'width'	  => '90%');

  //Set up the table Headings
  $header = array(
  array('data' => t('Actief')),
  array('data' => t('Vliegend Lid')),
  array('data' => t('Administratief Lid')),
  array('data' => t('Donateur')),
  array('data' => t('Donateur Bedrijf')),
  array('data' => t('Oud Lid')),
  array('data' => t('Clubblad adres')),
  array('data' => t('Babyvriend'))
  );

  // Tel ACTIEVE records per soort
  // VL = Vliegend Lid
  $query = "SELECT COUNT(*) FROM {ezac_Leden} WHERE Actief AND Code='VL'";
  $AantalVL = db_query($query)->fetchField();
  //AL = Administratief Lid (donateur met stemrecht)
  $query = "SELECT COUNT(*) FROM {ezac_Leden} WHERE Actief AND Code='AL'";
  $AantalAL = db_query($query)->fetchField();
  //DO = Donateur
  $query = "SELECT COUNT(*) FROM {ezac_Leden} WHERE Actief AND Code='DO'";
  $AantalDO = db_query($query)->fetchField();
  // DB = Donateur Bedrijf (sponsor)
  $query = "SELECT COUNT(*) FROM {ezac_Leden} WHERE Actief AND Code='DB'";
  $AantalDB = db_query($query)->fetchField();
  // OL = Oud Lid
  $query = "SELECT COUNT(*) FROM {ezac_Leden} WHERE Actief AND Code='OL'";
  $AantalOL = db_query($query)->fetchField();
  // CL = Clubblad adres (geen lid)
  $query = "SELECT COUNT(*) FROM {ezac_Leden} WHERE Actief AND Code='CL'";
  $AantalCL = db_query($query)->fetchField();
  // BF = BabyFan - Vriend van Nico Baby (geen lid)
  $query = "SELECT COUNT(*) FROM {ezac_Leden} WHERE Actief AND Code='BF'";
  $AantalBF = db_query($query)->fetchField();

  // zet in de tabel
  $row[] = array(t('Ja'),
    '<a href="?q=ledenbestand/browse/VL/1">' .$AantalVL .'</a>',
    '<a href="?q=ledenbestand/browse/AL/1">' .$AantalAL .'</a>',
    '<a href="?q=ledenbestand/browse/DO/1">' .$AantalDO .'</a>',
    '<a href="?q=ledenbestand/browse/DB/1">' .$AantalDB .'</a>',
    '<a href="?q=ledenbestand/browse/OL/1">' .$AantalOL .'</a>',
    '<a href="?q=ledenbestand/browse/CL/1">' .$AantalCL .'</a>',
    '<a href="?q=ledenbestand/browse/BF/1">' .$AantalBF .'</a>');

  // Tel NIET ACTIEVE records per soort
  // VL = Vliegend Lid
  $query = "SELECT COUNT(*) FROM {ezac_Leden} WHERE Actief=0 AND Code='VL'";
  $AantalVL = db_query($query)->fetchField();
  //AL = Administratief Lid (donateur met stemrecht)
  $query = "SELECT COUNT(*) FROM {ezac_Leden} WHERE Actief=0 AND Code='AL'";
  $AantalAL = db_query($query)->fetchField();
  //DO = Donateur
  $query = "SELECT COUNT(*) FROM {ezac_Leden} WHERE Actief=0 AND Code='DO'";
  $AantalDO = db_query($query)->fetchField();
  // DB = Donateur Bedrijf (sponsor)
  $query = "SELECT COUNT(*) FROM {ezac_Leden} WHERE Actief=0 AND Code='DB'";
  $AantalDB = db_query($query)->fetchField();
  // OL = Oud Lid
  $query = "SELECT COUNT(*) FROM {ezac_Leden} WHERE Actief=0 AND Code='OL'";
  $AantalOL = db_query($query)->fetchField();
  // CL = Clubblad adres (geen lid)
  $query = "SELECT COUNT(*) FROM {ezac_Leden} WHERE Actief=0 AND Code='CL'";
  $AantalCL = db_query($query)->fetchField();
  // BF = BabyFan - Vriend van Nico Baby (geen lid)
  $query = "SELECT COUNT(*) FROM {ezac_Leden} WHERE Actief=0 AND Code='BF'";
  $AantalBF = db_query($query)->fetchField();

  // zet in de tabel
  $row[] = array(
    t('Nee'),
    '<a href="?q=ledenbestand/browse/VL/0">' .$AantalVL .'</a>',
    '<a href="?q=ledenbestand/browse/AL/0">' .$AantalAL .'</a>',
    '<a href="?q=ledenbestand/browse/DO/0">' .$AantalDO .'</a>',
    '<a href="?q=ledenbestand/browse/DB/0">' .$AantalDB .'</a>',
    '<a href="?q=ledenbestand/browse/OL/0">' .$AantalOL .'</a>',
    '<a href="?q=ledenbestand/browse/CL/0">' .$AantalCL .'</a>',
    '<a href="?q=ledenbestand/browse/BF/0">' .$AantalBF .'</a>');
	    
  // zet de tabel opgemaakt in de output
  //$output .= theme('table', $header, $row, $attributes);
  $output[3]['#theme'] = 'table';
  $output[3]['#attributes'] = $attributes;
  $output[3]['#header'] = $header;
  $output[3]['#rows'] = $row;
  $output[3]['#empty'] = t('Geen gegevens beschikbaar');
  $output[3]['#weight'] = 3;
	  
  return $output;	
}//ezaclide_overzicht

/**
* Export naar bestand menu entry
**/
function ezaclide_bestand() {
//drupal_set_message(t('Informatie Ledenbestand en export naar Davilex'));
//build form for Davilex export
  return drupal_get_form('ezaclide_bestand_form');
}//ezaclide_bestand

/**
* generate bestand Export screen 
*/
function ezaclide_bestand_form($form, &$form_state) {
// Overzicht in andere functie geplaatst
// tekst die aan de gebruiker wordt getoond voor de export functie
  unset($output); //clear
  $output[4]['#type'] = 'markup';
  $output[4]['#markup']= t('<p><h1>Export van het ledenbestand</h1></p>');
  $output[4]['#weight'] = 4;

  // wat is de actuele gebruiker
  global $user;
  $name = $user -> name;

  // haal timestamp op van laatste toegang ledenbestand door deze gebruiker
  $query = "SELECT LastAccess FROM {ezac_Leden} WHERE User=:Name"; //' .$name .'"';
  $LastAccess = db_query($query, array(':Name' => $name))->fetchField();

//  $output .= t('Laatste export voor gebruiker [' .$name .'] was op ' .date('j-M-Y G:i',strtotime($LastAccess)) .'<br>');
  $output[5]['#type'] = 'markup';
  $output[5]['#markup'] = t('Laatste export voor gebruiker [' .$name .'] was op ' .date('j-M-Y G:i',strtotime($LastAccess)) .'<br>');
  $output[5]['#weight'] = 5;
  
  // build introduction for Davilex export

  // bepaal aantal wijzigingen sinds laatste bezoek van $user
  $query = 'SELECT COUNT(Mutatie) FROM {ezac_Leden} WHERE Mutatie > :Mutatie'; //' .$LastAccess .'"';
  $AantalMutaties = db_query($query, array(':Mutatie' => $LastAccess))->fetchField();
  $output[6]['#type'] = 'markup';
  $output[6]['#markup'] = t('Aantal mutaties sinds die datum: ');
  $output[6]['#weight'] = 6;
  
  $output[7]['#type'] = 'markup';
  $output[7]['#weight'] = 7;
  if ($AantalMutaties) {
    $output[7]['#markup'] = '<a href="?q=ledenbestand/mutaties">' .$AantalMutaties .'</a><p>';
  }
  else $output[7]['#markup'] = $AantalMutaties .'<p>';
  // uitbreiden voor NIEUW, WIJZIGING, VERWIJDERD

  // selectie voor alle records of alleen updates ?
  // build form for stage name selection
  $form['intro'] = array(
    'content' => array($output));
  $form['filenaam'] = array(
  '#title' => t('Filenaam'),
  '#type' => 'textfield',
  '#default_value' => t('davilex.txt'),
  '#description' => t('Geef de naam voor het uitvoerbestand'),
  );
  $form['submit'] = array(
  '#type' => 'submit',
  '#value' => t('Stuur bestand')
  );
  // nog button om terug te keren zonder export toevoegen

  return $form;	
}//ezaclide_bestand_form

/**
* Validatie functie voor bestand Export formulier
* ... nog geen functies gedefinieerd
**/
function ezaclide_bestand_form_validate($form, &$form_state) {
// check $filenaam op geldigheid
// $filenaam = $form_state['values']['filenaam'];

  return;
}//ezaclide_bestand_form_validate

/**
* Verzend export bestand naar de gebruiker 
**/ 
function ezaclide_bestand_form_submit($form, &$form_state) {
global $user;
  // Put timestamp of last export request in Leden table to signal use of export function
  // This is used to show Leden table updates since last export
/* TODO tijdelijk uitgeschakeld wegens general error in sql
  $query = "UPDATE {ezac_Leden} SET lastaccess='" .date("Y-m-d H:i:s") ."' WHERE user = :User"; //' .$user->name ."'";
  $args = array(':User' => $user->name);
  try {
  $result = db_query($query, $args)->fetchField();
  }
  catch(Exception $e) {
    drupal_set_message('Fout - ' .$e);
  }
*/

  //generate output and send file to user
  $form_state['redirect'] = 'ledenbestand/bestand/produce/' .$form_state['values']['filenaam'];
  return;
} //ezaclide_bestand_form_submit

/**
* helper functie - zet datum om van systeemdatum JJJJ-MM-DD naar DD-MM-JJJJ
**/ 
function switchdate($datum) {
  if ($datum != NULL) {
  $lv = explode('-',$datum);
  $datum = sprintf('%s-%s-%s',$lv[2],$lv[1],$lv[0]);
  }
  return $datum;
}//switchdate

/**
* Maak exportbestand uit Leden tabel
* geformatteerd voor input in bestand (csv)
* Output via html headers naar attachment
* @param string $filenaam
**/
function ezaclide_bestand_produce($filenaam = 'davilex.txt') {
    $CRLF = "\r\n";
    drupal_set_message('Output naar bestand [' .$filenaam .']'); //DEBUG
    if ($filenaam == '') $filenaam = 'bestand.txt';
    
    $query  = 'SELECT afkorting, ';
    $query .= "CONCAT_WS(' ',voornaam,voorvoeg,achternaam) AS naam, ";
    $query .= 'voornaam, voorvoeg, voorletter, achternaam, ';
    $query .= 'adres, postcode, plaats, ';
    $query .= 'telefoon, land, e_mail, code, afkorting, geboorteda AS geboortedatum, ';
    $query .= 'lid_van, lid_eind ';
    $query .= 'FROM {ezac_Leden} WHERE actief ';
    $query .= "AND afkorting <> '' ";
    $query .= 'ORDER by achternaam, postcode, code';
    
    $result = db_query ($query) ;
    drupal_set_message('Records selected [' .$result->RowCount() .']');
    
    $data = ""; //bestand export file data 
    $data .= '"ZoekCode";"Naam";"Voornaam";"Tussenvoegsel";"Achternaam";"Voorletters";"Geboortedatum";';
    $data .= '"Straat hoofdadres";"Postcode hoofdadres";"Plaats hoofdadres";"Land hoofdadres";';
    $data .= '"Straat postadres";"Postcode postadres";"Plaats postadres";"Provincie postadres";"Land postadres";';
    $data .= '"E-mailadres";"Telefoonnummer";';
    $data .= '"Begindatum lidmaatschap";"Einddatum lidmaatschap"' .$CRLF;

    /* Velden in Davilex exportbestand:
    * "Zoekcode";
    * "Naam"; "Voornaam"; "Tussenvoegsel"; "Achternaam";"Voorletters";
    * "Geboortedatum";
    "Titel";
    "Geslacht";
    "Functie";
    "Bank-/girorekening";
    "Betalingswijze";"
    Relatiebeheerder";
    "Niet actief";
    * "Straat hoofdadres";"Postcode hoofdadres";"Plaats hoofdadres";"Provincie hoofdadres";"Land hoofdadres";
    * "E-mailadres";
    "Faxnummer";
    * "Telefoonnummer";
    "Webpagina";
    >> "Straat postadres";"Postcode postadres";"Plaats postadres";"Provincie postadres";"Land postadres";
    "Factuur toesturen";
    * "Begindatum lidmaatschap";
    * "Einddatum lidmaatschap";
    "Postadres via ander lid";
    "Betalend lid";
    "KvK-nummer";
    "Soort relatie";
    "Persoontype";
    "Naam contactpersoon";
    "Afdeling";
    "Is afzonderlijke relatie";
    "BTW-nummer";
    "BrancheZoekcode";
    "BrancheBranchenaam";
    "RechtsvormAfkorting";
    "RechtsvormRechtsvorm";
    "Bedrijfsgrootte";
    "Valuta voor relatie";
    "Debiteur";
    "Crediteur";
    "Verkoopdagboek";"Verkooppostnummer";"Verkoper bij debiteur";"Kortingsmarge debiteur";"Prijslijst bij debiteur";"Kredietlimiet debiteur";"Debiteur geblokkeerd";"Betalingsvoorwaarde debiteur";"Leveringsvoorwaarde debiteur";
    "Inkoopdagboeknummer";"Inkooppostnummer";"Kortingsmarge crediteur";"Kredietlimiet crediteur";"Betalingsvoorwaarde crediteur";"Leveringsvoorwaarde crediteur";
    "Straat afleveradres";"Postcode afleveradres";"Plaats afleveradres";"Provincie afleveradres";"Land afleveradres";
    >> "Straat factuuradres";"Postcode factuuradres";"Plaats factuuradres";"Provincie factuuradres";"Land factuuradres"
    */

    while ($l = $result->fetchAssoc()) {
      $data .= sprintf('"%s";"%s";"%s";"%s";"%s";',$l["afkorting"],$l["naam"],$l["voornaam"],$l["voorvoeg"],$l["achternaam"]);
      $data .= sprintf('"%s";"%s";"%s";"%s";"%s";"%s";',$l["voorletter"],$l["geboortedatum"],$l["adres"],$l["postcode"],$l["plaats"],$l["land"]);
      $data .= sprintf('"%s";"%s";"%s";"%s";"%s";',$l["adres"],$l["postcode"],$l["plaats"],'',$l["land"]); 
      //postadres gelijk aan hoofdadres doorgeven
      $data .= sprintf('"%s";"%s";',$l["e_mail"],$l["telefoon"]);
      $data .= sprintf('"%s";"%s"',switchdate($l["lid_van"]),switchdate($l["lid_eind"])) .$CRLF;	
      } //while

  // output file to user
  //drupal_add_http_header("Content-Type", "text/plain; charset=utf-8");
  //	drupal_set_header("Content-Type: text/plain; charset=ISO-8859-1");
  //drupal_add_http_header("Content-Disposition", "attachment; filename=" .$filenaam);

    drupal_add_http_header('Content-Type', 'text/plain; charset=utf-8');
    drupal_add_http_header('Content-Disposition', 'attachment; filename="' .$filenaam .'"'); 
    print $data;
    return;
}//output_bestand

/**
* Menu entry : toon Leden bestand voor Code en [niet] Actief
* ../ledenbestand/browse/Code/Actief
**/
function ezaclide_browse($Code, $Actief) {
  unset ($tokens);
  $query = 'SELECT * FROM {ezac_Leden} WHERE code=:Code AND actief= :Actief ORDER BY achternaam, postcode';
  $tokens[':Code'] = $Code;
  $tokens[':Actief'] = $Actief;
  $result = db_query($query, $tokens);

  //Toon aanwezige records

  // Table tag attributes
  $attributes = array(
    'border'      => 1,
    'cellspacing' => 0,
    'cellpadding' => 5,
  //	  'class'       => 'example',
    'width'	=> '90%'
  );

  //Set up the table Headings
  $header = array(
    array('data' => t('Naam')),
    array('data' => t('Adres')),
    array('data' => t('Telefoon')),
    array('data' => t('E-mail')),
    array('data' => t('Code'))
  );

  while ($line = $result->fetchAssoc()) {
      $row[] = array(
	$line['voornaam'] ." " .$line['voorvoeg'] ." " .$line['achternaam'],
	$line['adres'] ."<br>" .$line['postcode'] ."  " .$line['plaats'] ."<br>" .$line['land'],
	$line['telefoon'] ."<br>" .$line['mobiel'],
	$line['e_mail'],
	$line['code']);
  } //while
//  return theme('table', $header, $row, $attributes);
  $build = array(
    'content' => array(
      '#theme' => 'table',
      '#rows' => $row,
      '#header' => $header,
      '#attributes' => $attributes,
      '#empty' => 't(Geen gegevens beschikbaar)'
      ),
    );
  return $build;

}//ezaclide_browse

function ezaclide_mutaties() {

  global $user;
  $name = $user -> name;
  
  // haal timestamp op van laatste toegang ledenbestand door deze gebruiker
  $query = 'SELECT lastaccess FROM {ezac_Leden} WHERE user=:User'; // .$name .'"';
  $LastAccess = db_query($query, array(':User' => $name))->fetchField();

// $output .= t('Laatste export voor gebruiker [' .$name .'] was op ' .date('j-M-Y G:i',strtotime($LastAccess)) .'<br>');

  // bepaal aantal wijzigingen sinds laatste bezoek van $user
  $query = 'SELECT * FROM {ezac_Leden} WHERE mutatie > :Mutatie';// .$LastAccess .'"';
  $result = db_query($query, array(':Mutatie' => $LastAccess));
  //Toon aanwezige records

  // Table tag attributes
  $attributes = array(
    'border'      => 1,
    'cellspacing' => 0,
    'cellpadding' => 5,
//  'class'       => 'example',
    'width'	=> '90%'
  );

  //Set up the table Headings
  $header = array(
    array('data' => t('Naam')),
    array('data' => t('Adres')),
    array('data' => t('Telefoon')),
    array('data' => t('E-mail')),
    array('data' => t('Code')),
    array('data' => t('Mutatie')),
    array('data' => t('KenEZACvan'))
	  );

  while ($line = $result->fetchAssoc()) {
      $row[] = array(
	$line['voornaam'] ." " .$line['voorvoeg'] ." " .$line['achternaam'],
	$line['adres'] ."<br>" .$line['postcode'] ."  " .$line['plaats'] ."<br>" .$line['land'],
	$line['telefoon'] ."<br>" .$line['mobiel'],
	$line['e_mail'],
	$line['code'],
	$line['wijzigingsoort']);
	$line['kenezacvan'];
  } //while

  //  return theme('table', $header, $row, $attributes);
  $build = array(
    'content' => array(
      '#theme' => 'table',
      '#rows' => $row,
      '#header' => $header,
      '#attributes' => $attributes,
      '#empty' => 't(Geen gegevens beschikbaar)'
      ),
    );
  return $build;

}//ezaclide_mutaties

/**
* insert user in drupal database
* @$user userid
* @pass password
* @mail mail address - must be unique
**/ 
function ezaclide_add_drupal_user($user, $pass, $mail) {
  $account = array();
  $account['user'] = $user;
  $account['mail'] = $mail;
  $account['pass'] = $pass;
  $existing_account = FALSE;
  $updated = FALSE;
  // check whether mail address is unique
  //$existing_account = user_load(array('mail' => $mail));
  // test user id for validity
  // user_save
  $account = user_save('', $account);
  return ($existing_account == FALSE);
} // exaclide_add_drupal_user