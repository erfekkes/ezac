<?php
// $Id$
/**
 * ezacroo module v7.x-1.0
 * EZAC gliding club www.ezac.nl
 * "Rooster" implementation for the roster of club services
 * Services are retrieved from {ezac_Rooster}, {ezac_Rooster_Diensten}, {ezac_Rooster_Periode}
 * Members are retrieved from {ezac_Leden}, current member from $user->name
 * Roster services may be exchanged where updates will be mailed to members concerned
 *
 * Author Evert Fekkes, 2013
 */  
 
/* TODO Implement the hook_theme registry. Combine all theme registry entries
 into one hook_theme function in each corresponding module file.
 function ezacroo_theme() {
 return array(
 );
 } */

/**
* Implementation of hook_permission().
*/
function ezacroo_permission() {
  return array(
    'rooster' => array(
      'title' => t('EZAC rooster'),
      'description' => t('Inzien EZAC dienstenrooster.'),
    ),
  );
}

/**
* Implements hook_services_resources().
*/
function ezacroo_services_resources() {
  $api = array(
   'rooster' => array(
      'operations' => array(
        'retrieve' => array( // GET
          'help' => 'Retrieves rooster records',
          'callback' => '_ezacroo_rooster_retrieve',
          'access callback' => 'user_access',
          'access arguments' => array('access content'), //leden view
          'access arguments append' => FALSE,
          'args' => array(
            array(
              'name' => 'resource_id',
              'type' => 'string',
              'description' => 'resource id',
              'source' => array('path' => '0'), //<id> of record requested or <*>
              'optional' => FALSE,
              'default value' => '0',
            ),
            array(
              'name' => 'datum',
              'type' => 'string',
              'description' => 'Datum value YYYY[-MM[-DD]]',
              'source' => array('param' => 'datum'),
              'optional' => TRUE,
            ),
          ),
        ),
      ),
    ),
  );
  return $api;
}

/**
 * Implementation of hook_menu().
 */
function ezacroo_menu() {
  $items = array();

  $items['rooster'] = array(
    'title' => 'EZAC rooster',
    'page callback' => 'ezacroo_page',
    'page arguments' => array('today'),
    'type' => MENU_NORMAL_ITEM,
    'access callback' => 'user_access',
    'access arguments' => array('rooster'),
  );
  $items['rooster/nr1'] = array(
    'title' => 'vanaf vandaag',
    'page callback' => 'ezacroo_page',
    'page arguments' => array('today'),
    'access arguments' => array('rooster'),
    'access callback' => 'user_access',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => 0,
  );
  $items['rooster/nr2'] = array(
    'title' => 'alle dagen',
    'page callback' => 'ezacroo_page',
    'page arguments' => array('all'),
    'access arguments' => array('rooster'),
    'access callback' => 'user_access',
    'type' => MENU_LOCAL_TASK,
    'weight' => 1,
  );
  $items['rooster/nr3'] = array(
    'title' => 'instructie',
    'page callback' => 'ezacroo_page',
    'page arguments' => array('instructor'),
    'access callback' => 'user_access',
    'access arguments' => array('rooster'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 2,
  );
  $items['rooster/select'] = array(
    'title' => 'Te ruilen dienst',
    'page callback' => 'ezacroo_select',
    'page arguments' => '',
    'type' => MENU_CALLBACK,
    'access callback' => 'user_access',
    'access arguments' => array('rooster'),
  );
  $items['rooster/change'] = array(
    'title' => 'Geruilde dienst',
    'page callback' => 'ezacroo_change',
    'page arguments' => '',
    'type' => MENU_CALLBACK,
    'access callback' => 'user_access',
    'access arguments' => array('rooster'),
  );
  $items['rooster/confirm'] = array(
    'title' => 'Bevestig de te ruilen dienst',
    'page callback' => 'ezacroo_confirm',
    'page arguments' => '',
    'type' => MENU_CALLBACK,
    'access callback' => 'user_access',
    'access arguments' => array('rooster'),
  );
  
  //	}
  return $items;
}

/**
* Callback function for rooster retrieve
* @param string $resource_id <id> of record
* @param string $datum
* @return array xml or json formatted list of ezac_Leden records
*/
function _ezacroo_rooster_retrieve($resource_id, $datum) {
  // Check for mad values

  // required parameters available or default values generated?
  if (!isset($resource_id)) {
        return services_error('Missing resource id', 406);
      }
  
  // handle resource_id parameter
  // either a numeric value for field Id
  // or a alphanumeric value for field Afkorting
  // or '*' to select all records
  if ($resource_id == '*') { // select all records
    $id = '*';
  }
  else { //resource_id indicates a value for Id
    // select one record
    $id = $resource_id;
  }
  
  // required parameters available or default values generated?
  if (!isset($datum) or $datum == NULL) {
        $datum = date('Y-m-d'); //defaults to today as YYYY-MM-DD
        //return services_error('Missing parameter datum', 406);
      }
  
  //if $datum is a range, split and process
  // range is indicated by date:date format
  if (strpos($datum, ':')) {
    $datum_range = explode(':',$datum);
    ezacservices_check_datum($datum_range[0], $datumStart, $datumEnd);
    $ds = $datumStart;
    ezacservices_check_datum($datum_range[1], $datumStart, $datumEnd);
    $de = $datumEnd;
    return ezacservices_find_rooster_by_date($ds, $de);
  }
  else { //single date
    ezacservices_check_datum($datum, $datumStart, $datumEnd);
    return ezacroo_find_rooster_by_date($datumStart, $datumEnd);
  }
}

function ezacroo_find_rooster_by_date($datumStart, $datumEnd) {
    // Compose query
  $query = db_select('ezac_Rooster', 'r');
  $query->join('ezac_Rooster_Diensten', 'd', 'r.Dienst = d.Dienst');
  $query->join('ezac_Rooster_Periode', 'p', 'r.Periode = p.periode');
  $query->join('ezac_Leden', 'l', 'r.Naam = l.afkorting');
  $query->fields('r', array('Datum', 'Periode'));
  $query->addField('p', 'omschrijving', 'Periode_naam');
  $query->addField('d', 'Omschrijving', 'Dienst');
  $query->fields('l', array('voornaam', 'voorvoeg', 'achternaam'));
  $query->condition('r.datum', array($datumStart, $datumEnd), 'BETWEEN');

  $query->orderBy('r.datum', 'ASC');
  $query->orderBy('r.periode', 'ASC');
  $query->orderBy('r.dienst', 'ASC');

  $items = $query->execute()->fetchAll();
  $diensten = array();
  foreach ($items as $item) {
    unset($dienst);
    $dienst->Datum = substr($item->Datum, 0, 10);
    $dienst->Periode = $item->Periode;
    $dienst->Periode_naam = $item->Periode_naam;
    $dienst->Dienst = $item->Dienst;
    $dienst->Naam = sprintf('%s %s %s', $item->voornaam, $item->voorvoeg, $item->achternaam);
    $diensten[] = $dienst;
  }
  return $diensten;
}

/**
 * Called when user goes to example.com/?q=rooster
 * Tonen van rooster met hyperlinks voor eigen diensten
 * Selecteer van een te ruilen dienst via hyperlink
 */
function ezacroo_page($select = '') {
  // $select = 'today' : show rooster from today onwards
  // $select = 'all'   : show all rooster entries
  // $select = 'instructor' : show only instructor entries
  // $select = 'alledienst  : enable switching all entries


  global $user;
  unset($AlleDienst);

  switch ($select) {
    case 'all':
      $Alledagen = true;
      break;
    case 'today':
      $Alledagen = false;
      break;
    case 'instructor':
      $Instructie = true;
      break;
    case 'alledienst':
      $Alledienst = true;
      break;
  } //switch

  //drupal_set_message(t('Klik op de naam bij de dienst die je wilt ruilen'));
  //drupal_set_message(t('Ruil alleen diensten volgens gemaakte afspraken.'));
  //drupal_set_message(t('De persoon waar je mee ruilt, en de anderen van die dag krijgen een e-mail ter informatie.'));

  //Maak tabel roo_1 als page view
  //Links in tabel moeten verwijzen naar roo_2 pagina callback met parameter ednr (en Owner?)

  $Owner = $user->name;

  $query  = "SELECT CONCAT_WS(' ',l.VOORNAAM,l.VOORVOEG,l.ACHTERNAAM) AS wNaam, "; //dit lijkt overbodig, niet gebruikt?
  $query .= 'l.AFKORTING AS Naam ';
  $query .= 'FROM {ezac_Leden} l WHERE User = :Owner';
  $args   = array(':Owner' =>$Owner);
  $result = db_query($query, $args);

  $line = $result->fetchAssoc(); // fetch as an associative array
  $Zelf = $line["Naam"];
  
  //Toon aanwezige diensten vanaf vandaag
  $today  = date("Y-m-d", mktime());
  $query  = 'SELECT r.*, d.Omschrijving, ';
  $query .= "CONCAT_WS(' ',w1.VOORNAAM,w1.VOORVOEG,w1.ACHTERNAAM) wNaam ";
  $query .= 'FROM {ezac_Rooster} r, {ezac_Leden} w1, {ezac_Rooster_Diensten} d ';
  if ($Alledagen) {
    $query .= "WHERE r.Datum <> '' ";
    drupal_set_message('AlleDagen geselecteerd'); //debug
  }
  else {
    $query .= "WHERE r.Datum >= :Datum ";
  }
  $query .= 'AND r.Naam = w1.AFKORTING ';
  $query .= 'AND r.Dienst = d.Dienst ';
  
  $args = array(':Datum' => $today); // only required for query from Datum

  if (isset($EigenDienst)) {
    $query .= 'AND Naam = :Zelf ';//"' . $Zelf . '" '; // toon alleen eigen diensten voor ruil
    $args .= array(':Zelf' => $Zelf); // niet zeker of hier ook string concatenation kan worden gebruikt
  }
  if (isset($Instructie)) { // Toon alleen instructie diensten
    $query .= "AND (r.Dienst = 'I' OR r.Dienst = 'T' OR r.Dienst = 'D') ";
  }
  if (isset($Overig)) { // Toon geen instructie diensten
    $query .= "AND (r.Dienst = 'P' OR r.Dienst = 'L' OR r.Dienst = 'B') ";
  }
  $query .= 'ORDER by Datum, Periode, Dienst';

  //drupal_set_message($query); //debug
  
  $result = db_query($query, $args); // or ("Query failed: -" . $query . "-");


  // printing HTML result
  // Table tag attributes
  $attributes = array(
    'border' => 1,
    'cellspacing' => 0,
    'cellpadding' => 5,
//    'class' => 'example',
    'width' => '90%',
  );
  // Header line
  $header = array(
    array('data' => t('Datum')),
    array('data' => t('A 8:30-13:00')),
    array('data' => t('B 12:30-18:00')),
    array('data' => t('C vanaf 18:00')),
  );
   
  $ActDatum = ""; // Indicator voor overgang op nieuwe rij
  $ActPeriode = "A"; // Indicator voor overgang op nieuwe kolom
  $row_field = array(
    'A' => '',
    'B' => '',
    'C' => '',
  );

  while ($line = $result->fetchAssoc()) {
    $Dat1 = $line["Datum"];
    $Dat = explode(" ", $Dat1);
    $YYMMDD = explode("-", $Dat[0]);
    $Datum = $YYMMDD[2] . '-' . $YYMMDD[1] . '-' . $YYMMDD[0];
    $Periode = $line["Periode"]; // A, B of C
    $Naam = $line["Naam"]; // AFKORTING van lid
    $wNaam = $line["wNaam"]; // Volledige naam van lid
    $Id = $line["Id"]; // record nummer van rooster entry
    $Dienst = $line["Omschrijving"]; // Soort dienst

    //drupal_set_message($Datum .'-' .$Periode .'-' .$Naam .'-' .$Id .'-' .$Dienst); //debug
    
    if ($Datum <> $ActDatum) {
      if ($ActDatum <> "") { // einde vorige rij
        $row[] = array(
          $ActDatum,
          $row_field['A'],
          $row_field['B'],
          $row_field['C'],
        );
      } //if
      $row_field['A'] = '';
      $row_field['B'] = '';
      $row_field['C'] = '';
      // print "<tr><td>" .$Datum ."</td>\n\t"; // nieuwe rij
      $ActDatum = $Datum;
      $ActPeriode = "A";
      //print "<td>";
    }
    if ($Periode <> $ActPeriode) {
      //print "</td><td>"; // volgende kolom
      if ($ActPeriode == "A") {
        $ActPeriode = "B";
      }
      else if ($ActPeriode == "B") {
        $ActPeriode = "C";
      }
    }
    if ($Periode <> $ActPeriode) {
      //print "</td><td>"; // skip kolom
      if ($ActPeriode == "A") {
        $ActPeriode = "B";
      }
      else if ($ActPeriode == "B") {
        $ActPeriode = "C";
      }
    }
    $row_field[$Periode] .= $Dienst . ":";
    if (($Naam == $Zelf) or isset($AlleDienst)) {
      $row_field[$Periode] .= '<a href="?q=rooster/select/' . $Id . '/' . $Owner . '">';
    }
    $row_field[$Periode] .= $wNaam;
    if (($Naam == $Zelf) or isset($AlleDienst)) {
      $row_field[$Periode] .= "</a>";
    }
    $row_field[$Periode] .= "<br>";

  } // while

  // Produce last line
  $row[] = array(
    $ActDatum,
    $row_field['A'],
    $row_field['B'],
    $row_field['C'],
  );

  //drupal_set_message(print_r($row)); // debug
 
  //return theme('table', $header, $row, $attributes);
  $build = array(
    'content' => array(
      '#theme' => 'table',
      '#rows' => $row,
      '#header' => $header,
      '#attributes' => $attributes,
      '#empty' => 't(Geen gegevens beschikbaar)'
      ),
    );
  return $build;
}

/**
 * Called when user goes to example.com/?q=rooster/select
 * Selecteer van een dienst om te ruilen
 * de te ruilen dienst heeft Id = ednr
 */
function ezacroo_select($ednr, $Owner) {

  //global $user;
  //$Owner = $user->name;

  //Vul $Zelf met Code van $Owner...
  //$query  = 'SELECT CONCAT_WS(" ",VOORNAAM,VOORVOEG,ACHTERNAAM) wNaam, ';
  $query  = 'SELECT ';
  $query .= 'AFKORTING Naam ';
  $query .= 'FROM {ezac_Leden} WHERE User = :Owner'; //"' . $Owner . '"';
  $result = db_query($query, array(':Owner'=>$Owner)); // or ("Query failed: <" . $query . ">");

  $line = $result->fetchAssoc(); // fetch as an associative array
  $Zelf = $line["Naam"];

  (isset($ednr)) or ("Geen te ruilen dienst opgegeven");
  drupal_set_message(t('Kies de dienst waarmee wordt geruild'));

  $query  = 'SELECT r.*, d.Omschrijving, ';
  $query .= "CONCAT_WS(' ',w1.VOORNAAM,w1.VOORVOEG,w1.ACHTERNAAM) wNaam ";
  $query .= 'FROM {ezac_Rooster} r, {ezac_Leden} w1, {ezac_Rooster_Diensten} d ';
  $query .= 'WHERE r.Id = :ednr '; // . $ednr . ' ';
  $query .= 'AND r.Naam = w1.AFKORTING ';
  $query .= 'AND r.Dienst = d.Dienst ';

  $result = db_query($query, array(':ednr'=>$ednr)); // or ("Query failed: <" . $query . ">");
  $line = $result->fetchAssoc();
  
  $Dat1 = $line["Datum"];
  $Dat = explode(" ", $Dat1);
  $YYMMDD = explode("-", $Dat[0]);
  $Dat2 = $YYMMDD[2] . '-' . $YYMMDD[1] . '-' . $YYMMDD[0];
  $Naam1 = $line["Naam"];

  $output  = '<h3>Ruil op ' . $Dat2 . ' in de ' . $line['Periode'] . '-periode de ';
  $output .= $line['Omschrijving'] . '-dienst van ' . $line['wNaam'] . '</h3>';
 
  $build['tekst'] = array(
    '#type' => 'markup',
    '#markup' => $output
  );
  if (($Naam1 <> $Zelf) and ($AlleDienst <> 1)) {
    die("Niet toegestaan");
  }

  //Toon aanwezige diensten vanaf vandaag
  $today  = date("Y-m-d", mktime());
  $query  = 'SELECT r.*, d.Omschrijving, ';
  $query .= "CONCAT_WS(' ',w1.VOORNAAM,w1.VOORVOEG,w1.ACHTERNAAM) wNaam ";
  $query .= ', w1.TELEFOON '; // tbv zwevend helpveld boven dienst
  $query .= 'FROM {ezac_Rooster} r, {ezac_Leden} w1, {ezac_Rooster_Diensten} d ';
  //$query .= 'WHERE Datum >= "' .$today .'" ';
  $query .= 'WHERE Datum <> :Datum '; // >= "' .$today .'" '; //VOOR TEST ALLE DATA GESELECTEERD
  $query .= 'AND r.Naam = w1.AFKORTING ';
  $query .= 'AND r.Dienst = d.Dienst ';
  if (isset($Instructie)) { // Toon alleen instructie diensten
    $query .= 'AND r.Dienst = "I" OR r.Dienst = "T" OR r.Dienst = "D" ';
  }
  if (isset($Overig)) { // Toon geen instructie diensten
    $query .= 'AND r.Dienst = "P" OR r.Dienst = "L" OR r.Dienst = "B" ';
  }
  $query .= 'ORDER by Datum, Periode, Dienst ';
  //$query .= 'LIMIT 0,30';

  $result = db_query($query, array(':Datum'=>'')); // or ("Query failed: -" . $query . "-");

  // printing HTML result
  // Table tag attributes
  $attributes = array(
    'border' => 1,
    'cellspacing' => 0,
    'cellpadding' => 5,
//    'class' => 'example',
    'width' => '90%',
  );
  // Header line
  $header = array(
    array('data' => t('Datum')),
    array('data' => t('A')),
    array('data' => t('B')),
    array('data' => t('C')),
  );

  $ActDatum = ""; // Indicator voor overgang op nieuwe rij
  $ActPeriode = "A"; // Indicator voor overgang op nieuwe kolom
  $row_field = array(
    'A' => '',
    'B' => '',
    'C' => '',
  );

  while ($line = $result->fetchAssoc()) {
    $Dat1 = $line["Datum"];
    $Dat = explode(" ", $Dat1);
    $YYMMDD = explode("-", $Dat[0]);
    $Datum = $YYMMDD[2] . '-' . $YYMMDD[1] . '-' . $YYMMDD[0];
    $Periode = $line["Periode"];
    $Naam = $line["Naam"]; // AFKORTING van lid
    $wNaam = $line["wNaam"]; //Volledige naam van lid
    $Id = $line["Id"]; //record nummer van rooster entry
    $Dienst = $line["Omschrijving"];

    if ($Datum <> $ActDatum) {
      if ($ActDatum <> "") { // einde vorige rij
        $row[] = array(
          $ActDatum,
          $row_field['A'],
          $row_field['B'],
          $row_field['C'],
        );
      } //if
      $row_field['A'] = '';
      $row_field['B'] = '';
      $row_field['C'] = '';
      // print "<tr><td>" .$Datum ."</td>\n\t"; // nieuwe rij
      $ActDatum = $Datum;
      $ActPeriode = "A";
      //print "<td>";
    }
    if ($Periode <> $ActPeriode) {
      //print "</td><td>"; // volgende kolom
      if ($ActPeriode == "A") {
        $ActPeriode = "B";
      }
      else if ($ActPeriode == "B") {
        $ActPeriode = "C";
      }
    }
    if ($Periode <> $ActPeriode) {
      //print "</td><td>"; // skip kolom
      if ($ActPeriode == "A") {
        $ActPeriode = "B";
      }
      else if ($ActPeriode == "B") {
        $ActPeriode = "C";
      }
    }
    $row_field[$Periode] .= $Dienst . ":";
    if (($Naam <> $Zelf) or isset($AlleDienst)) {
      $row_field[$Periode] .= '<a href="?q=rooster/confirm/' . $ednr . '/' . $Id . '">'; //use form to confirm change
    }
    $row_field[$Periode] .= $wNaam;
    if (($Naam <> $Zelf) or isset($AlleDienst)) {
      $row_field[$Periode] .= "</a>";
    }
    $row_field[$Periode] .= "<br>";

  } // while

  // Produce last line
  $row[] = array(
    $ActDatum,
    $row_field['A'],
    $row_field['B'],
    $row_field['C'],
  );

    $build['content'] = array(
      '#theme' => 'table',
      '#rows' => $row,
      '#header' => $header,
      '#attributes' => $attributes,
      '#empty' => 't(Geen gegevens beschikbaar)'
    );
  return $build;
}

/** 
* Called when user goes to example.com/?q=rooster/change
* Ruilen van de diensten
* params $ednr en $ednr2 verwijzen naar de record nummers van de te ruilen diensten
* Deze worden omgeruild in de database waarbij de mutatie wordt vastgelegd
*/
function ezacroo_change($ednr = 0, $ednr2 = 0) {

  if (isset($ednr)) {
//    drupal_set_message(t('Te ruilen dienst'));

    $query  = 'SELECT r.*, d.Omschrijving, w1.E_mail, ';
    $query .= "CONCAT_WS(' ',w1.VOORNAAM,w1.VOORVOEG,w1.ACHTERNAAM) wNaam ";
    $query .= 'FROM {ezac_Rooster} r, {ezac_Leden} w1, {ezac_Rooster_Diensten} d ';
    $query .= 'WHERE r.Id = :ednr '; // . $ednr . ' ';
    $query .= 'AND r.Naam = w1.AFKORTING ';
    $query .= 'AND r.Dienst = d.Dienst ';

    $result = db_query($query, array(':ednr' => $ednr)); // or ("Query failed: <" . $query . ">");
    $line = $result->fetchAssoc();

    $Dat1 = $line["Datum"];
    $Datum1 = $Dat1; // vasthouden 1e datum
    $Dat = explode(" ", $Dat1); //verwijderen tijd
    $YYMMDD = explode("-", $Dat[0]);
    $Dat2 = $YYMMDD[2] . '-' . $YYMMDD[1] . '-' . $YYMMDD[0]; //omzetten naar dd-mm-jjjj

    $EersteDatum = $Dat2; // tbv roo_mail
    $EersteNaam  = $line["wNaam"];
    $Naam1       = $line["Naam"];
    $Periode1    = $line["Periode"];
    $Dienst1     = $line["Omschrijving"];
    $E_mail1	 = $line["E_mail"];

  } //if isset($ednr)

  if (isset($ednr2)) {
    $query  = 'SELECT r.*, d.Omschrijving, w1.E_mail, ';
    $query .= "CONCAT_WS(' ',w1.VOORNAAM,w1.VOORVOEG,w1.ACHTERNAAM) wNaam ";
    $query .= 'FROM {ezac_Rooster} r, {ezac_Leden} w1, {ezac_Rooster_Diensten} d ';
    $query .= 'WHERE r.Id = :ednr2 '; //' . $ednr2 . ' ';
    $query .= 'AND r.Naam = w1.AFKORTING ';
    $query .= 'AND r.Dienst = d.Dienst ';

    $result = db_query($query, array(':ednr2' => $ednr2)); // or ("Query failed: <" . $query . ">");
    $line = $result->fetchAssoc();
    
    $Dat1 = $line["Datum"];
    $Datum2 = $Dat1; // vasthouden 2e datum
    $Dat = explode(" ", $Dat1);
    $YYMMDD = explode("-", $Dat[0]);
    $Dat2 = $YYMMDD[2] . '-' . $YYMMDD[1] . '-' . $YYMMDD[0];
  
    $TweedeDatum = $Dat2; // tbv roo_mail
    $TweedeNaam  = $line["wNaam"];
    $Naam2       = $line["Naam"];
    $Periode2    = $line["Periode"];
    $Dienst2     = $line["Omschrijving"];
    $E_mail2	 = $line["E_mail"];
  } //if

  $Mutatie = date("Y-m-d H:i:s"); //Huidige datum en tijd

  //Plaats het 1e record in de database - TODO NOG TE WIJZIGEN IN DYNAMIC DB CALL
  $query  = 'UPDATE {ezac_Rooster} ';
  $query .= 'SET Naam = :Naam2, ';
  $query .= 'Geruild = :Naam1, ';
  $query .= 'Mutatie = :Mutatie ';
  $query .= 'WHERE Id = :ednr'; 
  $result = db_query($query,array(
    ':Naam2'    => $Naam2,
    ':Naam1' 	=> $Naam1,
    ':Mutatie' 	=> $Mutatie,
    ':ednr'    	=> $ednr
    ))
  or ("Update 1 failed <" . $result . ">:" . $query);

  //Plaats het 2e record in de database
  $query  = 'UPDATE {ezac_Rooster} ';
  $query .= 'SET Naam = :Naam1, ';
  $query .= 'Geruild = :Naam2, ';
  $query .= 'Mutatie = :Mutatie ';
  $query .= 'WHERE Id = :ednr2'; 
  $result = db_query($query,array(
    ':Naam1'    => $Naam1,
    ':Naam2' 	=> $Naam2,
    ':Mutatie' 	=> $Mutatie,
    ':ednr2'    => $ednr2
    ))
  
  or ("Update 2 failed <" . $result . ">:" . $query);

  //Verstuur mail berichten voor EZAC roosterwijzigingen
  //Database EZAC
  //Tables Rooster, Dienst, Periode
  //Records met Id = ednr en ednr2
  //User  $Zelf

  /* recipients */
  $recipient = $E_mail1 ."; " .$E_mail2;
  $recipient .= "; webmaster@ezac.nl"; //ter controle
  
  /* subject */
  $subject = "Wijziging EZAC Dienstrooster op " . $EersteDatum;
  if ($EersteDatum <> $TweedeDatum) {
    $subject .= " en " . $TweedeDatum;
  }

  /* message */
  $message  = "";
  $message .= "<H1>Geruild:</H1>\n";
  $message .= $EersteNaam  . " heeft de ";
  $message .= $Dienst1     . " dienst in de ";
  $message .= $Periode1    . " periode van ";
  $message .= $EersteDatum . " geruild met ";
  $message .= $TweedeNaam  . "'s ";
  $message .= $Dienst2     . " dienst in de ";
  $message .= $Periode2    . "  periode ";
  if ($Datum1 <> $Datum2) {
    $message .= "van " . $TweedeDatum . "<p>\n";
  }

  $message .= "<H1>Overzicht van de diensten op " . $EersteDatum;
  if ($EersteDatum <> $TweedeDatum) {
    $message .= " en " . $TweedeDatum;
  }
  $message .= "</H1>\n";
  $message .= "<TABLE border=1>\n";
  $message .= "<THEAD><b>";
  $message .= "<TR><TD>Datum</TD>\t";
  $message .=     "<TD>Periode</TD>\t";
  $message .=     "<TD>Dienst</TD>\t";
  $message .=     "<TD>Naam</TD>\t";
  $message .= "</TR></b></THEAD>\n";

  $query  = 'SELECT r.*, d.Omschrijving, ';
  $query .= "CONCAT_WS(' ',w.VOORNAAM,w.VOORVOEG,w.ACHTERNAAM) wNaam ";
  $query .= 'FROM {ezac_Rooster} r, {ezac_Leden} w, {ezac_Rooster_Diensten} d ';
  $query .= 'WHERE r.Naam = w.AFKORTING ';
  $query .= 'AND r.Dienst = d.Dienst ';
  $query .= 'AND (Datum = :Datum1'; //"' . $Datum1 . '"';
  if ($Datum1 <> $Datum2) {
    $query .= ' OR Datum = :Datum2'; // . $Datum2 . '"';
  }
  $query .= ') ORDER BY Datum, Periode, Omschrijving';
  $result = db_query($query, array(':Datum1'=>$Datum1,':Datum2'=>$Datum2)); // or ("Query failed:" . $query);


  while ($line = $result->fetchAssoc()) {
    $Dat1 = explode(" ", $line["Datum"]);
    $Dat  = explode("-", $Dat1[0]);
    $message .= "<TR><TD>" . $Dat[2] . "-" . $Dat[1] . "-" . $Dat[0] . "</TD>\t";
    $message .= "<TD>" . $line["Periode"] . "</TD>\t";
    $message .= "<TD>" . $line["Omschrijving"] . "</TD>\t";
    $message .= "<TD>" . $line["wNaam"] . "</TD>\t";
    $message .= "</TR>\n";
  }
  $message .= "</TABLE>\n";

  /* you can add a stock signature */
  $message .= "<p>--<br>\r\n"; //Signature delimiter
  $message .= "<i>EZAC dienstrooster systeem</i>";

  /* additional header pieces for errors, From cc's, bcc's, etc */

  $headers  = "From: webmaster@ezac.nl\n";
  $headers .= "X-Mailer: PHP\n"; // mailer
  $headers .= "Return-Path: <webmaster@ezac.nl>\n"; // Return path for errors

  /* If you want to send html mail, uncomment the following line */
  $headers .= "Content-Type: text/html; charset=iso-8859-1\n"; // Mime type

  //$headers .= "cc: birthdayarchive@php.net\n"; // CC to
  //$headers .= "bcc: birthdaycheck@php.net, birthdaygifts@php.net"; // BCCs to

  /* and now mail it */
  $print = "Mail wordt verzonden";
  $print .= "<p>To: " . $recipient . "<br>\n";
  $print .= "Subject: " . $subject . "<br>\n";
  $print .= "<p>" . $message . "<br>\n";
//  $print .= "<p>Headers: " . $headers . "\n";

  //mail alleen als er ook recipients zijn...
  if (isset($recipient)) {
    mail($recipient, $subject, $message, $headers); //mail even uitgezet voor test DEBUG
  }

  return $print;
}

/**
* Use a form to confirm the rooster change requested
* called from ezample.com/?q=rooster/confirm
* params $ednr and $ednr2 indicate the records to be switched
**/
function ezacroo_confirm($ednr = 0, $ednr2 = 0) {
  $output = drupal_get_form('ezacroo_confirm_form',$ednr, $ednr2);
  return $output;
}

/**
* form to confirm the rooster change
* params $ednr and $ednr2 indicate the records to be switched
**/
function ezacroo_confirm_form($form, &$form_state, $ednr, $ednr2) { //$form added

  if (isset($ednr)) {
//    drupal_set_message(t('Te ruilen dienst'));

    $query  = 'SELECT r.*, d.Omschrijving, w1.E_mail, ';
    $query .= "CONCAT_WS(' ',w1.VOORNAAM,w1.VOORVOEG,w1.ACHTERNAAM) wNaam ";
    $query .= 'FROM {ezac_Rooster} r, {ezac_Leden} w1, {ezac_Rooster_Diensten} d ';
    $query .= 'WHERE r.Id = :ednr '; // . $ednr . ' ';
    $query .= 'AND r.Naam = w1.AFKORTING ';
    $query .= 'AND r.Dienst = d.Dienst ';

    $result = db_query($query, array(':ednr' => $ednr)); 
    $line = $result->fetchAssoc();

    $Dat1 = $line["Datum"];
    $Datum1 = $Dat1; // vasthouden 1e datum
    $Dat = explode(" ", $Dat1); //verwijderen tijd
    $YYMMDD = explode("-", $Dat[0]);
    $Dat2 = $YYMMDD[2] . '-' . $YYMMDD[1] . '-' . $YYMMDD[0]; //omzetten naar dd-mm-jjjj

    $EersteDatum = $Dat2; // tbv roo_mail
    $EersteNaam  = $line["wNaam"];
    $Naam1       = $line["Naam"];
    $Periode1    = $line["Periode"];
    $Dienst1     = $line["Omschrijving"];
    $E_mail1	 = $line["E_mail"];

  } //if isset($ednr)

  if (isset($ednr2)) {
    $query  = 'SELECT r.*, d.Omschrijving, w1.E_mail, ';
    $query .= "CONCAT_WS(' ',w1.VOORNAAM,w1.VOORVOEG,w1.ACHTERNAAM) wNaam ";
    $query .= 'FROM {ezac_Rooster} r, {ezac_Leden} w1, {ezac_Rooster_Diensten} d ';
    $query .= 'WHERE r.Id = :ednr2 '; //' . $ednr2 . ' ';
    $query .= 'AND r.Naam = w1.AFKORTING ';
    $query .= 'AND r.Dienst = d.Dienst ';

    $result = db_query($query, array(':ednr2' => $ednr2)); // or ("Query failed: <" . $query . ">");
    $line = $result->fetchAssoc();
    
    $Dat1 = $line["Datum"];
    $Datum2 = $Dat1; // vasthouden 2e datum
    $Dat = explode(" ", $Dat1);
    $YYMMDD = explode("-", $Dat[0]);
    $Dat2 = $YYMMDD[2] . '-' . $YYMMDD[1] . '-' . $YYMMDD[0];
  
    $TweedeDatum = $Dat2; // tbv roo_mail
    $TweedeNaam  = $line["wNaam"];
    $Naam2       = $line["Naam"];
    $Periode2    = $line["Periode"];
    $Dienst2     = $line["Omschrijving"];
    $E_mail2	 = $line["E_mail"];
//  drupal_set_messsage(t('met ' .$TweedeDatum
//                      .' in de ' .$Periode2
//                      .'-periode de ' .$Dienst2 .'-dienst'
//                      .' van ' .$TweedeNaam));
  } //if

  // Build the form
  $form['Naam1'] = array(
  '#title' => $EersteNaam . t(' ruilt op ') 
	      .$EersteDatum .t(' in de ') 
	      .$Periode1 .t(' periode de ')
	      .$Dienst1 .t(' dienst met de'),
  '#type' => 'item'); 
  $form['ednr'] = array(
  '#type' => 'value',
  '#value' => $ednr); //store first record id
  $form['Naam2'] = array(
  '#title' => $Dienst2 .t(' dienst van ')
	      .$TweedeNaam .t(' op ')
	      .$TweedeDatum .t(' in de ')
	      .$Periode2 .t(' periode.'),
  '#type' => 'item');
  $form['ednr2'] = array(
  '#type' => 'value',
  '#value' => $ednr2); //store second record id
  $form['submit'] = array(
  '#type' => 'submit',
  '#value' => t('Ruil deze diensten'));
  
  return $form;
  
} //ezacroo_confirm_form

/**
* validate the form
* placeholder as there is nothing to validate
**/
function ezacroo_confirm_form_validate($form, &$form_state) {
// nothing to validate, just confirm
} //ezacroo_confirm_form_validate

/**
* Handle post-validation form submission
**/
function ezacroo_confirm_form_submit($form, &$form_state) {
 $ednr = $form_state['values']['ednr'];
 $ednr2 = $form_state['values']['ednr2'];
 $form_state['redirect'] = 'rooster/change/' .$ednr .'/' .$ednr2;
 //ezacroo_change($ednr, $ednr2); //execute the change
} //ezacroo_confirm_form_submit